<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>grails tips</title>
  <text xml:space="preserve"><note-content version="0.1">grails tips

keyword: Domain Object, domain class, grails applicatoin, validation, custom validator, xml parsing, html decoding, automatic type converstion, function resolution, download ws response, <link:internal>JSON</link:internal> object

<size:large>how to display html in gsp?</size:large>

variable having html could not be rendered because grails kept converting &lt; &amp; &gt; symbols. one solution is to use raw function.
<highlight>${raw("&amp;lt;p&amp;gt;9920&amp;lt;/p&amp;gt;")}</highlight>

<size:large>how to print <link:internal>JSON</link:internal></size:large><size:large> object on GSP page?</size:large>

<highlight>${(widget as <link:internal>JSON</link:internal></highlight><highlight>).toString()}</highlight>
important to convert <link:internal>JSON</link:internal> object to string. Otherwise all quotes (") gets converted to html equivalent (&amp;quot;)

Otherwise, I had same trouble <link:internal>at</link:internal> a differnet instance but the above did not work.
<highlight>&lt;g:message message="${otus as grails.converters.<link:internal>JSON</link:internal></highlight><highlight>}"/&gt;;</highlight>

<size:large>how to get grailsApplication object in domain object function?</size:large>

<highlight>this.getDomainClass().getGrailsApplication();</highlight>

<size:large>how to get config information in grails?</size:large>

<highlight>grailsApplication.config.treebaseUrl</highlight>
where treebaseUrl is stored in Config.groovy
and grailsApplication is got from the above code.

<size:large>custom validator</size:large>
<link:internal>domain objects</link:internal> can have custom validator. 
the below example checks if the nexml is well formed (all opened <link:internal>tags</link:internal> are closed).
<highlight>import org.<link:internal>apache</link:internal></highlight><highlight>.commons.io.IOUtils
import javax.xml.parsers.DocumentBuilderFactory</highlight>
<highlight> nexml (nullable: true, widget: 'textarea', validator: {val, obj -&gt;
            if( val ){
                def df = DocumentBuilderFactory.newInstance();
                def builder =  df.newDocumentBuilder()
                try{
                    // why UTF-8?
                    builder.parse( IOUtils.toInputStream( val,'UTF-8' ) )
                    return true;
                } catch (Exception e ){
                    return "NEXML is not well formed"
                }
            }
        })</highlight>
source: <link:url>http://stackoverflow.com/questions/782178/how-do-i-convert-a-string-to-an-inputstream-in-java</link:url>

<size:large>grails function resolution</size:large>

grails/groovy looks for the exact signature of a method called. If it cannot <link:internal>find</link:internal> it, automatic conversion takes place. for example,

<highlight>def getPage(Integer page , Integer pageSize, Object[] array ){
}
getPage( 1, 20, [1,2,3] )
// the above array, third param of function, is automatically converted to an object array of size 1. The first element of the array is the passed array.</highlight>

<size:large><link:internal>Downloading</link:internal></size:large><size:large> file</size:large>
<highlight>response.setHeader('Content-disposition','attachment; filename=data.csv')
<link:internal>render</link:internal></highlight><highlight>(contentType:'blah',text:'tttee')</highlight>

<size:large>URL <link:internal>mapping</link:internal></size:large><size:large> report</size:large>

<highlight>grails url-mappings-report</highlight>
<link:url>http://mrhaki.blogspot.com.au/2013/11/grails-goodness-create-report-of-url.html</link:url>


<size:large>Getting Beans</size:large>

<highlight>grailsApplication.maincontext.BEANNAME
OR
grailsApplication.maincontext.getBean('BeanName')</highlight></note-content></text>
  <last-change-date>2016-07-26T09:55:03.2671460+10:00</last-change-date>
  <last-metadata-change-date>2016-07-26T09:55:03.2671460+10:00</last-metadata-change-date>
  <create-date>2014-03-26T15:15:25.3143500+11:00</create-date>
  <cursor-position>2534</cursor-position>
  <width>512</width>
  <height>603</height>
  <x>378</x>
  <y>355</y>
  <tags>
    <tag>system:notebook:grails</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>