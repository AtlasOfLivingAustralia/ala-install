- include: ../../common/tasks/setfacts.yml
  tags:
    - tomcat_vhost
    - biocache-service
    - webapps
    - properties
    - nginx_vhost
    - symlinks
    - apache_vhost

- include: ../../apache_vhost/tasks/main.yml context_path='{{ biocache_service_context_path }}' hostname='{{ biocache_service_hostname }}' 
  tags:
    - biocache-service
    - deploy
    - apache_vhost
    - webapps
  when: not webserver_nginx

- name: set nginx proxy target if configured
  set_fact: 
    biocache_service_proxy_target: "{{biocache_service_context_path}}"
  tags:
    - nginx_vhost
    - deploy
    - biocache-service
  when: webserver_nginx and biocache_service_proxy_target is not defined

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
   hostname: "{{ biocache_service_hostname }}"
   context_path: "{{ biocache_service_context_path }}"
   nginx_paths:
      - path: "{{biocache_service_context_path}}/webportal/wms/reflect"
        sort_label: "1_wms_webportal"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/webportal/wms/reflect"
      - path: "{{biocache_service_context_path}}/ogc/wms/reflect"
        sort_label: "2_wms_ogc"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/ogc/wms/reflect"
      - path: "{{biocache_service_context_path}}/mapping/wms/reflect"
        sort_label: "3_wms_mapping"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/mapping/wms/reflect"
      - path: "{{biocache_service_context_path}}/occurrence/legend"
        sort_label: "4_occurrence_legend"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/occurrence/legend"
      - path: "{{biocache_service_context_path}}/density/legend"
        sort_label: "5_density_legend"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/density/legend"
      - path: "{{biocache_service_context_path}}/density/map"
        sort_label: "6_density_map"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/density/map"
      - path: "{{biocache_service_context_path}}/assertions/user/codes"
        sort_label: "7_assertions_user_codes"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/assertions/user/codes"
      - path: "{{biocache_service_context_path}}/webportal/bbox"
        sort_label: "7_webportal_bbox"
        is_proxy: true
        use_cache: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}/webportal/bbox"
      - path: "{{biocache_service_context_path}}"
        sort_label: "8_ws"
        is_proxy: true
        proxy_pass: "http://127.0.0.1:8080{{biocache_service_proxy_target}}"
      - path: "/biocache-download"
        sort_label: "8_download"
        is_proxy: false
        alias: "{{ download_dir | default('/data/biocache-download') }}"
  tags:
    - nginx_vhost
    - deploy
    - biocache-service
  when: webserver_nginx

- include: ../../tomcat_deploy/tasks/main.yml war_url='{{ biocache_service_war_path }}' context_path='{{ biocache_service_context_path }}' hostname='{{ biocache_service_hostname }}'
  when: biocache_service_local_build is not defined
  tags:
    - biocache-service
    - deploy
    - tomcat_vhost
    - webapps

- include: ../../tomcat_deploy/tasks/main.yml war_local_build='{{ biocache_service_local_build }}' context_path='{{ biocache_service_context_path }}' hostname='{{ biocache_service_hostname }}'
  when: biocache_service_local_build is defined
  tags:
    - biocache-service
    - deploy
    - tomcat_vhost
    - webapps

- name: ensure tomcat context directory exists
  file: path=/usr/share/{{tomcat}}/conf/Catalina/localhost/ state=directory owner={{tomcat_user}} group={{tomcat_user}}
  tags:
    - biocache-service  
  notify:
    - restart tomcat

- name: ensure application data directory exists
  file: path={{data_dir}}/biocache state=directory owner={{tomcat_user}}  group={{tomcat_user}}
  tags:
    - biocache-service  

- name: copy all data assets
  copy: src=data/config dest={{data_dir}}/biocache owner={{tomcat_user}}  group={{tomcat_user}}
  tags:
    - biocache-service
    - properties

- name: ensure target directories exist [data subdirectories etc.
  file: path={{item.path}} state=directory owner={{tomcat_user}}  group={{tomcat_user}} mode={{ item.perm | default(774) }}
  with_items:
    - { path: "{{data_dir}}/ala/layers/ready/shape" }
    - { path: "{{data_dir}}/biocache-load" }
    - { path: "{{data_dir}}/biocache-media", perm: 777 }  # https://github.com/AtlasOfLivingAustralia/ala-install/issues/57
    - { path: "{{data_dir}}/biocache-upload" }
    - { path: "{{data_dir}}/biocache-delete" }
    - { path: "{{data_dir}}/cache" }
    - { path: "{{data_dir}}/tmp" }
    - { path: "{{data_dir}}/offline/exports" }
    - { path: "{{data_dir}}/tool" }
    - { path: "{{data_dir}}/output/heatmap" }
    - { path: "{{data_dir}}/biocache-download", perm: 755 }
    - { path: "{{data_dir}}/biocache-download/tmp" }
  tags:
    - biocache-service

- name: copy biocache facets config
  copy: src=config/facets.json dest={{data_dir}}/biocache/config/facets.json
  tags:
    - biocache-service
    - properties

- name: copy biocache logging config
  copy: src=config/log4j.xml dest={{data_dir}}/biocache/config/log4j.xml
  tags:
    - biocache-service
    - properties

- name: set data ownership [all data is owned by tomcat]
# FIXME: The ansible file module fails with a recursion limit issue that "chown" isn't prone to
#  file: path={{data_dir}}/{{item}} owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  shell: "chown -R {{ tomcat_user }}:{{ tomcat_user }} {{ item }}"
  args:
    chdir: "{{ data_dir }}"
  with_items:
    - biocache
    - ala
    - biocache-load
    - biocache-media
    - biocache-upload
    - biocache-delete    
    - cache
    - tmp    
    - offline    
    - tool       
    - biocache-download
  tags:
    - biocache-service

- name: create download and media symlinks
  file:
     src: "{{ download_dir | default('/data/biocache-download') }}"
     dest: "/srv/{{ biocache_service_hostname }}/www/biocache-download"
     state: link
  when: not webserver_nginx
  tags:
    - biocache-service
    - symlinks


- name: set permissions for biocache-load [TODO - more restrictive permissions]
  file: path={{data_dir}}/biocache-load mode=777
  tags:
    - biocache-service  
  notify:
    - restart tomcat
