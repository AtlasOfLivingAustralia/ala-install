- name: Gather OS Specific Variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
  tags: postgresql

- include: apt.yaml

- set_fact:
    postgresql_packages: [ "libpq-dev", "python-psycopg2", "postgresql-{{pg_version}}", "postgresql-contrib-{{pg_version}}" ]

- name: Set postgis package names
  set_fact:
    postgresql_packages: "{{postgresql_packages}} + [ 'postgresql-{{pg_version}}-postgis-{{postgis_version}}', 'postgresql-{{pg_version}}-postgis-{{postgis_version}}-scripts', 'gdal-bin' ]"
  when: postgis_version is defined
  tags: postgresql

- name: Install Postgres
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ postgresql_packages }}"
  tags: postgresql
  register: postgresql_installed
  notify:
    - restart postgresql

- name: Initialize database directory
  copy:
    remote_src: yes
    src: "/var/lib/postgresql/{{pg_version}}/main/"
    dest: "{{ postgresql_data_directory }}"
    mode: 0700
    owner: 'postgres'
    group: 'postgres'
    force: no
  tags:
    - postgresql
  notify:
    - restart postgresql

- name: Set database directory
  ini_file:
    dest: "/etc/postgresql/{{pg_version}}/main/postgresql.conf"
    section:
    option: "data_directory"
    value: "'{{ postgresql_data_directory }}'"
  tags: postgresql
  notify:
    - restart postgresql

# Note: postgis is required to get the "shp2pgsql" binary, which is missing from postgres-9.6-postgis-2.4
# Not pulling in recommended packages as that would pull in postgres-10
- name: Install separate postgis package to get shp2pgsql binary
  apt: pkg="postgis" state="present" update_cache="yes" install_recommends="no"
  when: postgis_version is defined
  tags:
    - postgresql
  register: postgresql_installed
  notify:
    - restart postgresql

# PostGIS 2.2+ only needs CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology; etc on the target DB
- debug:
    msg: "PostGIS-enabled databases also need a corresponding pg_instance role with postgis in the extensions list"
  when: postgis_version is defined

- name: start postgresql and configure to startup automatically
  service:
    name: "{{ postgresql_service }}"
    state: restarted
    enabled: yes
  register: started
  tags: postgresql

- name: wait for postgresql restart
  command: sleep 5
  when: started.changed
  tags: postgresql
