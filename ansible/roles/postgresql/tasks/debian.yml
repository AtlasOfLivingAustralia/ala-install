- name: Gather OS Specific Variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
  tags: postgresql

- include: apt.yaml

- set_fact:
    postgresql_packages: [ "libpq-dev", "python-psycopg2" ]

- name: Set postgresql package name
  set_fact:
    postgresql_packages: "{{postgresql_packages}} + [ 'postgresql-{{pg_version}}-postgis-{{postgis_version}}', 'postgresql-{{pg_version}}-postgis-{{postgis_version}}-scripts', 'postgresql-contrib-{{pg_version}}' ]"
  when: postgis_version is defined

- name: Set postgresql package name
  set_fact:
    postgresql_packages: "{{postgresql_packages}} + [ 'postgresql-{{pg_version}}', 'postgresql-contrib-{{pg_version}}']"
  when: postgis_version is not defined

- name: Install Postgres
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ postgresql_packages }}"
  tags: postgresql

# PostGIS 2.2+ only needs CREATE EXTENSION postgis; on the target DB
- debug:
    msg: "PostGIS-enabled databases also need a corresponding pg_instance role with postgis in the extensions list"
  when: postgis_version is defined

- name: start postgresql and configure to startup automatically
  service:
    name: "{{ postgresql_service }}"
    state: started
    enabled: yes
  register: started
  tags: postgresql

- name: wait for postgresql restart
  command: sleep 2
  when: started.changed
  tags: postgresql
