- name: generate ssh key for user barman
  user: name=barman generate_ssh_key=yes

- name: generate ssh key for user postgres
  user: name=postgres generate_ssh_key=yes
  delegate_to: "{{ postgres_host }}"

- name: read public key for user barman
  shell: cat ~/.ssh/id_rsa.pub
  register: barman_key
  become_user: barman
  changed_when: no

- name: read public key for user postgres
  shell: cat ~/.ssh/id_rsa.pub
  become_user: postgres
  register: postgres_key
  delegate_to: "{{ postgres_host }}"
  changed_when: no

- name: put postgres key for user barman
  authorized_key: user=barman key="{{ postgres_key.stdout }}"

- name: put barman key for user postgres
  authorized_key: user=postgres key="{{ barman_key.stdout }}"
  delegate_to: "{{ postgres_host }}"

- name: ensure known_hosts file exists on barman
  file: dest=~/.ssh/known_hosts state=touch
  changed_when: false
  become_user: barman

- name: ensure known_hosts file exists on postgres
  file: dest=~/.ssh/known_hosts state=touch
  changed_when: false
  become_user: postgres
  delegate_to: "{{ postgres_host }}"

- name: get postgres rsa key
  shell: ssh-keyscan -t rsa {{ postgres_host }}
  become_user: barman
  register: postgres_rsa_key
  changed_when: no
  tags: keys

- name: get barman rsa key
  shell: ssh-keyscan -t rsa {{ barman_ip }}
  become_user: postgres
  register: barman_rsa_key
  delegate_to: "{{ postgres_host }}"
  changed_when: no
  tags: keys

- name: ensure we have postgres key in known hosts file for barman
  lineinfile: dest=~/.ssh/known_hosts regexp="^{{ postgres_host }}\s+ssh-rsa\s+.*" line="{{ postgres_rsa_key.stdout }}"
  become_user: barman
  tags: keys

- name: ensure we have barman key in known hosts file for postgres
  lineinfile: dest=~/.ssh/known_hosts regexp="^{{ barman_ip }}\s+ssh-rsa\s+.*" line="{{ barman_rsa_key.stdout }}"
  become_user: postgres
  delegate_to: "{{ postgres_host }}"
  tags: keys

- name: create barman superuser on postgres
  postgresql_user: name=barman password={{ postgres_barman_pass }} role_attr_flags=SUPERUSER
  delegate_to: "{{ postgres_host }}"
  become_user: postgres

- name: create db for user barman
  postgresql_db: name=barman
  delegate_to: "{{ postgres_host }}"
  become_user: postgres

# hostname:port:database:username:password
- name: setup access for barman user
  lineinfile: dest=~/.pgpass
              regexp="^{{ postgres_host }}:[^:]*:[^:]:barman:"
              line="{{ postgres_host }}:*:*:barman:{{ postgres_barman_pass }}"
              state=present
              create=yes
              mode=600
  become_user: barman