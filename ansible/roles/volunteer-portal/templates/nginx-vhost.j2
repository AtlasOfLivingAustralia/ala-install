#Ansible managed
include snippets/expires.conf;

limit_req_zone $binary_remote_addr zone=nginxratelimitzone:10m rate=600r/m;


server {
    listen 80 ;
    listen [::]:80 ;
    server_name {{digivol_hostname}} {{webserver_extra_servernames}};
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl  http2;
    listen [::]:443 ssl  http2;
    server_name {{digivol_hostname}} {{webserver_extra_servernames}};
    ssl_certificate {{ssl_certificate_server_dir}}/{{ssl_cert_file}};
    ssl_certificate_key {{ssl_certificate_server_dir}}/{{ssl_key_file}};
    ssl_protocols TLSv1.3 TLSv1.2  ;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Force HTTPS was configured, so setting STS value to 1 year (31536000 seconds)
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Secure referrer policy to avoid leaking paths, which can include auth ticket information
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Framing security setting (Reenable using frame_options_header)
    add_header X-Frame-Options DENY always;

    # Disable browser sniffing away from the header declared content type (Reenable using content_type_options_header)
    add_header X-Content-Type-Options nosniff always;


    root /srv/{{digivol_hostname}}/www/;
    index index.html;
    client_max_body_size 0;

    # set a default value so x_request_id can be used as a logging parameter
    set $x_request_id "";

    # If ssl is supported, then push this policy to all users who understand it to trigger HSTS
    add_header Content-Security-Policy upgrade-insecure-requests;


    location = /robots.txt {
        add_header  Content-Type  text/plain;
        return 200
"
# Disallow particular paths for all user agents
User-agent: *
Disallow: /ws
Disallow: /data
Disallow: //data
Disallow: ///data
Disallow: ////data
Disallow: /serve
Disallow: /task
Disallow: /transcribe
Disallow: /picklistItem
Disallow: /institution
Disallow: /log
Disallow: /index
Disallow: /validate
Disallow: /forum
Disallow: /user
Disallow: /assets
Disallow: /static
Disallow: /project
Disallow: /ajax
Disallow: /wildlife
Disallow: /css
Disallow: /ad
Crawl-delay: 30

# Disallow entire user agents
User-agent: SemrushBot
Disallow: /

User-agent: Semrush
Disallow: /

User-agent: SEMrush
Disallow: /

User-agent: semrush
Disallow: /

User-agent: Mappy
Disallow: /

User-agent: BUbiNG
Disallow: /

User-agent: Heart
Disallow: /

User-agent: MauiBot
Disallow: /

User-agent: Baiduspider
Disallow: /

User-agent: AhrefsBot
Disallow: /

User-agent: Yandex
Disallow: /

User-agent: Nimbostratus
Disallow: /

User-agent: LieBaoFast
Disallow: /

User-agent: Mb2345Browser
Disallow: /

User-agent: MicroMessenger
Disallow: /

User-agent: UCBrowser
Disallow: /

";

}
    location / {
        if ($blocked_ip) {
            return 403;
        }
        if ($blocked_user_agent) {
            return 444;
        }
        limit_req zone=nginxratelimitzone burst=200;
        # proxy_set_header Host $host;
        proxy_set_header Host {{digivol_hostname}};
        proxy_set_header X-Forwarded-Host {{digivol_hostname}};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_read_timeout 10m;
        proxy_pass http://127.0.0.1:8080/;
        deny 89.238.166.138;
        deny 38.95.108.231;
        deny 211.30.99.203;
        deny 101.164.147.2;
    }
    location /es {
        if ($blocked_ip) {
            return 444;
        }
        if ($blocked_user_agent) {
            return 444;
        }
        proxy_set_header Host {{digivol_hostname}};
        proxy_set_header X-Forwarded-Host {{digivol_hostname}};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_pass http://127.0.0.1:8080/es;
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_read_timeout 1h;
        access_log off;
    }
    error_page 403 =503 /403.html;
    error_page   502  /503.html;
    error_page   503  /503.html;
    location = /503.html {
	add_header Retry-After  300; # 5m
    }
    location = /403.html {
        add_header Retry-After  300; # 5m
    }
    location /data/volunteer {
        if ($blocked_ip) {
            return 403;
        }
        if ($blocked_user_agent) {
            return 444;
        }
		expires $expires;

		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_buffers 16 8k;
		gzip_http_version 1.1;
		gzip_types text/plain text/css text/javascript application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss;

		add_header Cache-Control no-transform;

        # Force HTTPS was configured, so setting STS value to 1 year (31536000 seconds)
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Secure referrer policy to avoid leaking paths, which can include auth ticket information
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        add_header Content-Security-Policy upgrade-insecure-requests;

        try_files $uri $uri/ =404;
    }
	location /server-status {
		# Turn on nginx stats
		stub_status on;
		# don't need logs for stats
		access_log   off;
		allow 127.0.0.1;
		allow ::1;
		allow 152.83.192.0/21;
		allow 152.83.36.0/22;
		deny all;
	}

}
