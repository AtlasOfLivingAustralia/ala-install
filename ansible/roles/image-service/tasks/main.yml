- include: ../../common/tasks/setfacts.yml
  tags:
    - image-service
    - properties
    - data_import

- name: "Ensure system user for image-service"
  user:
    name: image-service
    state: present
    system: yes
  tags:
    - image-service
    - properties

- include: ../../apache_vhost/tasks/main.yml context_path='{{ image_service_context_path }}' hostname='{{ image_service_hostname }}'
  tags:
    - deploy
    - apache_vhost
    - image-service
  when: not webserver_nginx

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    appname: "image-service"
    hostname: "{{ image_service_hostname }}"
    context_path: "{{ image_service_context_path }}"
    nginx_paths:
      - path: "{{ image_service_context_path }}"
        sort_label: "1_ws"
        is_proxy: true
        proxy_pass: "http://127.0.0.1:{{ image_service_port }}{{ image_service_context_path }}"
  tags:
    - nginx_vhost
    - deploy
    - image-service
  when: webserver_nginx

- name: ensure www directory exists
  file: path={{item}} state=directory
  with_items:
    - "/srv/{{ image_service_hostname }}/www"
  notify:
     - restart image-service
  tags:
    - image-service

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}"
  with_items:
    - "{{data_dir}}/image-service/setup"
    - "{{data_dir}}/image-service/config"
    - "{{data_dir}}/image-service/store"
    - "{{data_dir}}/image-service/incoming"
    - "{{data_dir}}/image-service/exports"
    - "{{data_dir}}/image-service/bin/imgcnv"
    - "/var/log/atlas/image-service"
  notify:
     - restart image-service
  tags:
    - image-service
    - properties

- name: copy all config.properties
  template: src={{ item }} dest={{data_dir}}/image-service/config/
  with_items:
    - "config/image-service-config.yml"
    - "config/{{ image_service_logfile | default('logback.groovy') }}"
  notify:
     - restart image-service
  tags:
    - deploy
    - image-service
    - properties
    - properties-file

- name: add image-service jar and setup service
  include_role:
    name: exec-jar
  vars:
    service_name: 'image-service'
    jar_url: '{{ image_service_jar_url }}'
    use_openjdk11: "{{ image_service_version is version('1.1.7.1', '>') }}"
    use_openjdk8: "{{ image_service_version is version('1.1.7.1', '<=') }}"
    log_config_filename: "{{ image_service_logfile }}"
    java_headless: True
  tags:
    - deploy
    - service
    - image-service

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}"
  with_items:
    - "{{data_dir}}/image-service/setup"
    - "{{data_dir}}/image-service/config"
    - "{{data_dir}}/image-service/store"
    - "{{data_dir}}/image-service/incoming"
    - "{{data_dir}}/image-service/exports"
    - "{{data_dir}}/image-service/bin/imgcnv"
    - "/var/log/atlas/image-service"
  notify:
     - restart image-service
  tags:
    - image-service
    - properties

- name: set data ownership for {{data_dir}}/image-service
  file: path={{data_dir}}/image-service owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}"
  notify:
     - restart image-service
  tags:
    - image-service
    - properties
    - image-service

- name: set data ownership postgres for {{data_dir}}/image-service/exports
  file: path={{data_dir}}/image-service/exports owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}" recurse=true
  notify:
     - restart image-service
  tags:
    - image-service
    - properties
    - image-service

- name: set data ownership for /opt/atlas/image-service
  file: path=/opt/atlas/image-service owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}" recurse=true
  notify:
     - restart image-service
  tags:
    - image-service
    - properties
    - image-service

- name: set data ownership for /var/log/atlas/image-service
  file: path=/var/log/atlas/image-service owner="{{ image_user | default('image-service') }}" group="{{ image_user | default('image-service') }}" recurse=true
  notify:
     - restart image-service
  tags:
    - image-service
    - properties
    - image-service

- name: install openjfx (Debian)
  apt: pkg=openjfx state=latest update_cache=yes
  when: ansible_os_family == "Debian" and use_openjdk8
  notify:
     - restart image-service
  tags:
    - packages
    - image-service

- name: add clear old failed_uploads CRON job
  ansible.builtin.cron:
    name: "clear old failed_uploads"
    minute: "0"
    hour: "5"
    weekday: "1"
    user: "postgres"
    job: psql -c "delete from failed_upload where (current_timestamp - date_created) > '7 days';" images

- debug: msg="For new installs, to finish installation use the admin screen to load the licence information in files/licence_mappings.csv and files/licences.csv."
