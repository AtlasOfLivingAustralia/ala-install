- include: ../../common/tasks/setfacts.yml
  tags:
    - service

- name: Update apt
  apt:
    update_cache: yes
  tags:
  - service

- name: Install dependencies
  apt:
    name: 
      - python-lxml
    state: present
  tags: 
  - service

- name: "Create system user for {{service_name}}"
  user:
    name: "{{ service_owner | default(service_name) }}"
    state: present
    system: yes
  tags:
  - service

- name: "Create {{service_name}} dir"
  file:
    path: "/opt/atlas/{{service_name}}"
    state: directory
    owner: "{{ service_owner | default(service_name) }}"
    group: "{{ service_owner | default(service_name) }}"
    mode: 0755
  tags: 
  - service

- name: "Create {{service_name}} service file"
  template:
    src: systemd.service
    dest: "/etc/systemd/system/{{service_name}}.service"
  register: service
  tags:
  - service

- name: "Reload services"
  when: service.changed
  systemd:
    name: "{{service_name}}"
    daemon-reload: yes
  tags:
  - service

- name: "Enable service"
  systemd:
    name: "{{service_name}}"
    enabled: true
  tags:
  - service

- name: "Download {{service_name}} JAR"
  maven_artifact:
    group_id: "{{groupId}}"
    artifact_id: "{{artifactId}}"
    version: "{{version|default('latest')}}"
    extension: "{{packaging|default('jar')}}"
    classifier: "{{classifier|default('')}}"
    repository_url: "{{maven_repo_url}}"
    timeout: 30
    dest: "/opt/atlas/{{service_name}}/{{service_name}}.jar"
    mode: u=rwx,g=rx,o=rx
    owner: "{{ service_owner | default(service_name) }}"
    group: "{{ service_group | default(service_name) }}"
    verify_checksum: always
  # get_url:
  #   url: "{{jar_url}}"
  #   timeout: "30"
  #   dest: "/opt/atlas/{{service_name}}/{{service_name}}.jar"
  #   mode: u=rwx,g=rx,o=rx
  #   owner: "{{ service_owner | default(service_name) }}"
  #   group: "{{ service_group | default(service_name) }}"
  #   force: yes
  notify: "restart {{service_name}}"
  tags:
  - service

- name: "Set {{service_name}} JAR config"
  template:
    src: service.conf
    dest: "/opt/atlas/{{service_name}}/{{service_name}}.conf"
    owner: "{{ service_owner | default(service_name) }}"
    group: "{{ service_group | default(service_name) }}"
  notify: "restart {{service_name}}"
  tags:
  - service

# Don't force start the service, rely on the handlers to do it
# - name: "Start {{service_name}} service"
#   systemd:
#     name: "{{service_name}}"
#     state: started
#   tags:
#   - service
