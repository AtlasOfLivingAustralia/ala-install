{% if auth_system is not defined or auth_system == 'cas' %}
# CAS Config
security.cas.casServerName={{ auth_base_url }}
security.cas.casServerUrlPrefix={{ auth_cas_url }}
security.cas.loginUrl={{ auth_cas_url }}/login
security.cas.logoutUrl={{ auth_cas_url }}/logout
security.cas.appServerName={{ merit_base_url }}
gateway=false
{% endif %}

security.oidc.clientId={{oidc_client_id}}
security.oidc.secret={{oidc_client_secret}}
security.oidc.discoveryUri={{ oidc_discovery_uri | default('') }}
security.jwt.discoveryUri={{ oidc_discovery_uri | default('') }}

userDetails.url ={{ user_details_url }}
user.registration.url = {{ user_details_url }}/registration/createAccount

{% if auth_system is defined and auth_system == 'cognito' %}
# cognito specific config
security.oidc.logoutUrl={{ logout_url | default('') }}
security.oidc.alaUseridClaim={{ alaUseridClaim | default('') }}
security.oidc.logoutAction={{ logoutAction | default('') }}
security.core.roleAttribute={{ roleAttribute | default('') }}
security.oidc.scope={{ scope | default('openid')}}
security.jwt.rolesFromAccessToken={{ rolesFromAccessToken | default('true') }}
security.jwt.userIdClaim={{ userIdClaim | default('') }}
security.jwt.roleClaims={{ roleClaims | default('') }}

# This isn't cognito specific, but we don't have this client configured in CAS
webservice.jwt=true
webservice.jwt-scopes=ala/internal users/read ala/attrs ecodata/write_test ecodata/read_test
webservice.client-id={{ merit_application_client_id }}
webservice.client-secret={{ merit_application_client_secret }}

{% endif %}



serverName={{merit_base_url}}
contextPath={{ merit_context_path }}
server.port={{ merit_server_port | default ('8080', True) }}


# HTTP timeouts
webservice.connectTimeout=10000
webservice.readTimeout=30000

# Other config
grails.serverURL={{merit_base_url}}
ecodata.baseUrl={{ ecodata_base_url }}/
ecodata.service.url={{ ecodata_base_url }}
layout.skin=nrm
api_key={{ api_key }}
upload.images.url={{ merit_base_url }}/image?id=
app.view.nocache = true

ala.image.service.url={{ images_base_url | default('http://images-dev.ala.org.au/') }}
google.maps.url=https://maps.googleapis.com/maps/api/js?key={{ google_maps_api_key }}
google.drawmaps.url=https://maps.googleapis.com/maps/api/js?libraries=drawing,geometry&key={{ google_maps_api_key }}

# Spatial portal config
spatial.baseUrl={{ spatial_base_url }}
spatial.wms.url={{ spatial_base_url }}/geoserver/ALA/wms?
spatial.wms.cache.url={{ spatial_base_url }}/geoserver/gwc/service/wms?
spatial.layersUrl={{ spatial_base_url }}/layers-service
spatial.geoserverUrl={{ spatial_base_url }}/geoserver
spatial.intersectUrl={{ spatial_base_url }}/ws/intersect/

collectory.baseURL=https://collections.ala.org.au/
pdfgen.baseURL={{ pdfgen_base_url }}


# Mail config
grails.mail.host={{ mail_host | default('smtp-relay.csiro.au') }}
grails.mail.port={{ mail_port | default('25') }}
merit.support.email=MERIT@environment.gov.au
emailFilter={{ email_filter | default('') }}

app.default.hub=merit
enableReporting = true

pdfbox.fontcache=/data/fieldcapture/cache/
security.apikey.ip.whitelist={{ app_api_whiteList }}

bie.baseURL={{ bie_base_url }}
lists.baseURL={{ lists_base_url }}
biocache.baseURL={{ biocache_base_url }}

ala.baseURL={{ ala_baseURL }}
bugherd.integration={{ bugherd_integration | default('false') }}
abn.abnLookupToken={{ abn_lookup_token }}
server.servlet.session.cookie.secure=true

# Analytics config
analytics.google.enable={{ enable_google_analytics }}
analytics.fathom.trackingId={{ fathom_tracking_id }}
