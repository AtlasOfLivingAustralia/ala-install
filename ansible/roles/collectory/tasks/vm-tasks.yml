---
- name: ensure mysql is running (this is idempotent so safe)
  service: name={{ mysql_service }} state=started enabled="yes"
  tags:
    - db
    - collectory

- name: create collectory DB
  mysql_db: name=collectory state=present encoding=utf8
  register: dbschema
  tags:
    - db
    - collectory

- name: create collectory DB user
  mysql_user: name={{collectory_db_user}} password={{collectory_db_password}} priv=collectory.*:ALL state=present
  tags:
    - db
    - collectory


#deploy as systemd service
- name: add collectory jar and setup systemd service
  include_role:
    name: exec-jar
  vars:
    service_name: "{{collectory_app | default('collectory')}}"
    use_openjdk17: "{{ collectory_version | string is version('5.2.0', '>') }}"
    log_config_filename: "{{ logback_config_filename }}"
    java_headless: True
  tags:
    - deploy
    - service
    - collectory
  when: exec_jar | default(false) | bool

- name: set log file for collectory systemd service
  file: path="/var/log/collectory" owner="{{ data_owner_user | default('collectory') }}"  state="directory" group="{{ data_owner_user | default('collectory') }}" recurse=true
  notify:
    - restart collectory
  tags:
    - collectory
  when: exec_jar | default(false) | bool

#deploy on tomcat
- name: set data ownership [all data is owned by tomcat]
  file: path={{ collectory_data_dir }} owner={{ tomcat_user }} group={{ tomcat_user }} recurse=true
  notify:
    - restart tomcat
  tags:
    - properties
    - collectory
  when: not (exec_jar | default(false) | bool)

- include_tasks: ../../tomcat_deploy/tasks/main.yml
  vars:
    #only used when tomcat_deploy_from_url
    war_url: '{{ collectory_war_url }}'
    context_path: '{{ collectory_context_path }}'
    hostname: '{{ collectory_hostname }}'
  tags:
    - deploy
    - tomcat_vhost
    - collectory
    - webapp
  when: not (exec_jar | default(false) | bool)
