# set up tomcat consistently whenever needed.  Used as:
# - include: ../common/tasks/tomcat.yml 
# "tomcat" variable controls version (@see common/vars)
- include: ../../common/tasks/setfacts.yml 
  tags:
    - packages
    - tomcat

- name: Install universe repository for tomcat7 install
  apt_repository:
    repo: deb http://archive.ubuntu.com/ubuntu xenial universe
    state: present
  when: ansible_os_family == "Debian" and ansible_distribution_version == "18.04" and tomcat == "tomcat7"
  tags:
  - packages
  - tomcat


- name: install libtcnative-1 (RedHat)
  yum: pkg={{libtcnative}} state=present
  when: ansible_os_family == "RedHat" and tomcat_apr == true
  tags:
    - packages
    - tomcat

- name: install tomcat (RedHat)
  yum: name={{tomcat}} state=present
  notify: 
    - restart tomcat
  when: ansible_os_family == "RedHat"
  tags:
    - packages
    - tomcat

- name: install libtcnative-1 (Debian)
  apt: pkg={{libtcnative}} state=latest update_cache=yes
  when: ansible_os_family == "Debian" and tomcat_apr == true
  tags:
    - packages
    - tomcat

- name: install tomcat (Debian)
  apt: pkg={{tomcat}} state=latest update_cache=yes
  when: ansible_os_family == "Debian"
  register: tomcat_installed
  tags:
    - packages
    - tomcat

- name: enable the HTTP 1.1 connector
  tomcat_connector: name="HTTP/1.1" bind_addr="{{ tomcat_bind_addr }}" port="{{ tomcat_http_port }}"
  when:
    tomcat_http == true
  tags:
  - tomcat
  notify:
  - restart tomcat

- name: enable the AJP 1.3 connector
  tomcat_connector: name="AJP/1.3" bind_addr="{{ tomcat_bind_addr }}" port="{{ tomcat_ajp_port }}"
  when:
    tomcat_ajp == true
  tags: 
    - tomcat
  notify:
    - restart tomcat

# replace the commented out java_opts that ships with the CentOS install which is:
# JAVA_OPTS="-Xminf0.1 -Xmaxf0.3"        
- name: configure tomcat memory (RedHat)
  blockinfile:
    path={{tomcat_conf}}
    marker="# {mark} Configure Tomcat Memory (Ansible managed)"
    block='JAVA_OPTS="${JAVA_OPTS} {{tomcat_java_opts}} -Djavax.sql.DataSource.Factory=org.apache.commons.dbcp.BasicDataSourceFactory"'
    backup=yes
  notify: 
    - restart tomcat
  when: ansible_os_family == "RedHat"
  tags:
    - tomcat

- name: configure tomcat memory (Debian)
  blockinfile:
    path={{tomcat_conf}}
    marker="# {mark} Configure Tomcat Memory (Ansible managed)"
    block='JAVA_OPTS="${JAVA_OPTS} {{tomcat_java_opts}}"'
    backup=yes
  notify: 
    - restart tomcat
  when: ansible_os_family == "Debian"
  tags:
    - tomcat

- name: Set JAVA_HOME  (Debian)
  lineinfile: " 
    dest={{tomcat_conf}}
    regexp=^JAVA_HOME
    line='JAVA_HOME={{ java_home }}'"
  notify: 
    - restart tomcat    
  when: ansible_os_family == "Debian"
  tags:
    - tomcat

- name: ensure tomcat temp directory exists
  file: path={{ tomcat_temp_directory | default("/data/tmp/tomcat-tmp") }} state=directory owner={{ tomcat_user }} group={{ tomcat_user }}
  notify:
    - restart tomcat
  when: ansible_os_family == "Debian"
  tags:
    - tomcat

- name: configure tomcat temp directory (Debian)
  blockinfile:
    path={{tomcat_conf}}
    marker="# {mark} Configure Tomcat Temp Directory, which will be created and destroyed every time tomcat starts and stops (Ansible managed)"
    block=JVM_TMP="{{ tomcat_temp_directory | default('/data/tmp/tomcat-tmp')}}"
    backup=yes
  notify:
    - restart tomcat
  when: ansible_os_family == "Debian"
  tags:
    - tomcat

- name: prepare user prefs directory
  file: path=/usr/share/{{ tomcat }}/.java state=directory owner={{ tomcat_user }} group={{ tomcat_user }}
  tags:
    - tomcat