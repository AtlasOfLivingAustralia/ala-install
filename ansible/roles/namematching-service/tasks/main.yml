---
- include: ../../common/tasks/setfacts.yml
  tags:
    - namematching-service
    - deploy
    - properties
    - nginx_vhost
  when: deployment_type != 'k8s'

- name: set nginx upstream server for nginx
  set_fact:
    upstream_host: "{{ namematching_service_upstream_host | default('127.0.0.1') }}"
  tags:
    - deploy
    - nginx_vhost
  when: deployment_type != 'k8s'

- name: "Create ala-namematching-service directories"
  file:
    path: "{{item}}"
    state: directory
    owner: "{{ namematching_user }}"
    group: "{{ namematching_user }}"
    mode: 0755
  with_items:
    - "/var/log/atlas/namematching-service"
  tags:
    - properties
    - namematching-service
  when: deployment_type != 'k8s'

- name: "Create ala-namematching-service directories (only docker)"
  file:
    path: "{{item}}"
    state: directory
    owner: "{{ namematching_user }}"
    group: "{{ namematching_user }}"
    mode: 0755
  with_items:
    - "/data/ala-namematching-service/config"
  when: deployment_type == 'swarm'
  tags:
    - properties
    - namematching-service

- name: Include VM tasks
  include: vm-tasks.yml
  when: deployment_type == 'vm'

- name: Customize configuration already added by apt package
  template:
    src: namematching-service-config.yml
    dest: "{{data_dir}}/ala-namematching-service/config/config.yml"
    owner: "{{ namematching_user }}"
    group: "{{ namematching_user }}"
  notify:
    - restart ala-namematching-service
  tags:
    - properties
    - namematching-service
  when: deployment_type != 'k8s'

- name: Customize species group files
  copy:
    src: "{{item}}"
    dest: "{{data_dir}}/ala-namematching-service/config/{{item}}"
    owner: "{{ namematching_user }}"
    group: "{{ namematching_user }}"
  with_items:
    - "groups.json"
    - "subgroups.json"
  notify:
    - restart ala-namematching-service
  tags:
    - properties
    - namematching-service
  when: deployment_type != 'k8s'

- name: add nginx vhost
  include_role:
    name: nginx_vhost
  vars:
    appname: "namematching-service"
    hostname: "{{ namematching_service_hostname }}"
    context_path: "{{ namematching_service_context_path }}"
    nginx_paths:
      - path: "{{ namematching_service_context_path }}"
        is_proxy: true
        proxy_pass: "http://{{upstream_host}}:{{ namematching_service_port }}/{{ namematching_service_context_path }}"
  # notify:
  #   - reload nginx
  tags:
    - nginx_vhost
    - namematching-service
    - deploy
  when: webserver_nginx | default(false) and deployment_type != 'k8s'

- name: Include docker tasks
  include: docker-tasks.yml
  when: deployment_type == 'swarm'

- name: Include k8s tasks
  include: k8s-tasks.yml
  when: deployment_type == 'k8s'