#Manully install R 3.02

- name: 3rd libs
  apt: pkg={{ item }} state=latest
  with_items:
    - python-dev # required by psycopg2
    - netcdf-bin
    - unzip
  tags:
    - R packages
  register: r_installed

- name: cp apt-get oztrack list
  become: true
  template:  src="oztrack.list" dest="/etc/apt/sources.list.d/oztrack.list"
  tags: R


#- name: Making sure R is installed (debian/ubuntu apt)
#  become: yes
#  command: add-apt-repository "deb https://cran.csiro.au/bin/linux/ubuntu $(lsb_release -s -c)/"
#  tags: r


 #this key will install 3.2
- name: Get key from ubuntu
  command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
  tags: R


- name: update apt
  become: yes
  command: apt-get update
  tags: R

- name: update apt key
  become: yes
  command: apt-key update
  tags: R


- name: 3rd libs
  apt: pkg={{ item }} state=latest
  with_items:
    - libgdal-dev
    - libproj-dev
    - libxml2-dev
    - libnetcdf-dev
    - libpq-dev #see if it help install psycopg2


#Install the latest one: 3.4.4
- name: Install R
  become: yes
  apt: pkg={{ item }} state=installed
  with_items:
     - r-base
  tags: R


- name: Adding devtool for installing a given version of packages
  command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "if (! ('{{item}}' %in% installed.packages()[,'Package'])) install.packages('{{item}}', repos=c('http://cran.r-project.org/'))"
  with_items:
    - devtools
  tags: R_version

#using devtolls to install specified version of packages
#Rscript --slave --no-save --no-restore-history -e "devtools::install_version('rgdal', version='1.0-4')"

- name: Install specified version of rgdal
  become: yes
  command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "devtools::install_version('rgdal', version='0.9-2',repos=c('https://cran.csiro.au/'))"
  tags: R_version


#missing packages
#alphahull, date, ncdf4
- name: Adding R packages. WARNING inlmisc needs a SLOW compilation.
  command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "if (! ('{{item}}' %in% installed.packages()[,'Package'])) install.packages('{{item}}', repos=c('https://cran.csiro.au/'))"
  with_items:
    - Rserve
    - sp
    - ade4
    - adehabitatHR
    - adehabitatMA
    - maptools
    - shapefiles
    - alphahull
    - raster
    - plyr
    - spatstat
    - Grid2Polygons
    - RColorBrewer
    - googleVis
    - spacetime
    - plotKML
    - nc
    - ncdf4
    - date
    - inlmisc  #Grid2Polygon needs it
  tags: r_packs


#Grid2Polygons 0.2.1  not available for R 3.4.4  #try inlmisc # not working
#wget https://cran.r-project.org/src/contrib/Archive/Grid2Polygons/Grid2Polygons_0.2.1.tar.gz
#R CMD INSTALL Grid2Polygons_0.2.1.tar.gz

- name: Download kftrack & ukfsst
  get_url:
    url: '{{ item }}'
    dest: /tmp
  with_items:
    - https://cran.r-project.org/src/contrib/Archive/Grid2Polygons/Grid2Polygons_0.2.1.tar.gz
    - https://github.com/positioning/kalmanfilter/raw/master/downloads/R3x/64bit/linux/kftrack_0.70-x64.tar.gz
    - https://github.com/positioning/kalmanfilter/raw/master/downloads/R3x/64bit/linux/ukfsst_0.3-x64.tar.gz
  tags: r_mannual

- name: Install kftrack & ukfsst
  sudo: yes
  command: "R CMD INSTALL {{ item }}"
  with_items:
    - /tmp/Grid2Polygons_0.2.1.tar.gz
    - /tmp/kftrack_0.70-x64.tar.gz
    - /tmp/ukfsst_0.3-x64.tar.gz
  tags: r_mannual

- name: Add postgres repository key
  apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc state=present
  tags: postgresql

#Already added into oztrack.list

- name: Add postgres repository
  sudo: yes
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ linux_version }}-pgdg main' state=present
  tags: postgresql

#- apt_repository:
#    repo: ppa:ubuntugis/ubuntugis-unstable
#    state: present

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes

- name: Install PostgreSQL
  apt: pkg={{ item }} state=present
  with_items:
    - postgresql-{{ pg_version }}
    - postgresql-client-{{ pg_version }}
    - postgresql-{{ pg_version }}-postgis-{{ pg_gis_version }}
    - postgresql-contrib-{{ pg_version }}
  register: postgresql_installed
  tags: postgresql


# - name: Install PostgreSQL adapter for the Python programming language
# psycopg2 rely on python3.6
#  or install python-dev package
- pip:
    name: psycopg2
    state: forcereinstall
  tags: postgresql

- name: Set Postgre auth
  lineinfile: dest="/etc/postgresql/{{ pg_version }}/main/pg_hba.conf" backrefs="yes" regexp="local   all             all                                     peer" line="local   all             all                                     md5"
  tags: setup_pg

#- name: Restart postgresql server
#  service: name="postgresql" state="started" enabled="yes"
#  tags: setup_pg

- name: Create zoatrack PG password
  postgresql_user: name="{{ pg_user }}" password="{{ pg_password }}" role_attr_flags="CREATEDB,SUPERUSER"
  become: yes
  become_user: postgres
  tags: init_db

- name: Create zoatrack PG db
  postgresql_db: name="{{ pg_database }}" owner="{{ pg_user }}"
  become: yes
  become_user: postgres
  tags: init_db

#- name: Generate init sql script from template
#  template:  src="init_db.sql" dest="/tmp/zoatrack_init_db.sql"
#  tags: init_db

- name: create postgis extensions
  become: yes
  become_user: postgres
  command: "psql {{ item }}"
  with_items:
    - -d {{ pg_database }} -c 'create extension postgis'
    - -d {{ pg_database }} -c 'create extension postgis_topology'
    - -d {{ pg_database }} -c 'create extension "uuid-ossp"'
  ignore_errors: yes
  tags: init_db , init_gis

- name: alter owner postgis extensions
  become: yes
  become_user: postgres
  command: "psql {{ item }}"
  with_items:
    - -d {{ pg_database }} -c 'alter table spatial_ref_sys owner to {{ pg_user }};'
    - -d {{ pg_database }} -c 'alter view geography_columns owner to {{ pg_user }};'
  tags: init_db , init_gis


#- name: Init zoatrack db
#  become: yes
#  become_user: postgres
#  shell: "psql -f /tmp/zoatrack_init_db.sql"
#  tags: init_db,init_gis


#sudo -u postgres psql -d oztrack -c "alter table geometry_columns owner to oztrack;"
#sudo -u postgres psql -d oztrack -c "alter table spatial_ref_sys owner to oztrack;"
#sudo -u postgres psql -d oztrack -c "alter view geography_columns owner to oztrack;"
#sudo -u postgres psql -d oztrack -c 'create extension "uuid-ossp";'

#- name: alter oztrack db
#  become: yes
#  become_user: postgres
#  command: "psql {{ item }}"
#  with_items:
#    - -d {{ pg_database }} -c "alter table geometry_columns owner to {{ pg_database }} ;"
#    - -d {{ pg_database }} -f "alter table spatial_ref_sys owner to {{ pg_database }} ;"
#    - -d {{ pg_database }} -f "alter view geography_columns owner to {{ pg_database }} ;"
#    - -d {{ pg_database }} -f "create extension "uuid-ossp";"
#
#  register: psql_log
#  tags: init_db, alter_db

##############################################

#- name: install openjdk 8 java
#  apt: pkg=openjdk-8-jdk state=latest update_cache=yes
#  tags:
#    - java

#- name: Remove Oracle Java 8 (using OpenJDK8 instead)
#  become: yes
#  apt: pkg=oracle-java8-installer state=absent purge=yes
#  when: ansible_os_family == "Debian" and use_openjdk8 is defined and use_openjdk8
#  tags:
#    - java

#
#- name: install ca-certificates
#  apt: pkg=ca-certificates state=latest update_cache=yes
#  tags:
#    - java

##############################################
- name: install Tomcat 7
  apt: pkg=tomcat7 state=latest
  tags:
    - tomcat7


- name: Set JAVA_HOME for tomcat7
  lineinfile: "
    dest='{{ tomcat_conf }}'
    regexp=^JAVA_HOME
    line='JAVA_HOME={{ java_home }}'"
  notify:
    - reload tomcat
  tags:
    - tomcat7


- name: cp server.xml
  become: yes
  template:  src="server.xml" dest="/etc/tomcat7/server.xml"
  notify:
    - reload tomcat
  tags: tomcat7

##############################################

- name: Download geoserver
  become: yes
  get_url:
    url: http://downloads.sourceforge.net/geoserver/geoserver-{{ geoserver_version }}-war.zip
    dest: /tmp
  tags: geoserver

#- name: Extract geoserver to webapps
#  become: yes
#  become_user: tomcat7
#  unarchive:
#    src: /tmp/geoserver-2.3.1-war.zip
#    dest: /var/lib/tomcat7/webapps/
#    remote_src: yes
#  tags: geoserver1

- name: Extract geoserver
  become: yes
  unarchive:
    src: /tmp/geoserver-{{ geoserver_version }}-war.zip
    dest: /tmp
    remote_src: yes
  tags: geoserver

- name: copy geoserver to webapps
  become: yes
  copy:
    src: /tmp/geoserver.war
    dest: /var/lib/tomcat7/webapps
    remote_src: yes
    owner: tomcat7
    group: tomcat7
  tags: geoserver



#########################################
- name: install apache
  apt: pkg={{ item }} state=latest
  with_items:
    - apache2
    - libapache2-mod-shib2

  tags: apache

#openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mysitename.key -out mysitename.crt
- name: Creates SSL cert directory
  file: path=/etc/apache2/ssl/ state=directory
  tags: apache


- name: create self-cert
  become: yes
  command: "openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/oztrack.key -out /etc/apache2/ssl/oztrack.crt -subj '/C=AU/ST=ACT/L=Canberra/O=CSIRO/OU=ALA/CN=ala.org.au'"
  tags: apache

- name: Enable mods
  command: a2enmod {{ item }}
  with_items:
    - proxy_http
    - ssl
    - shib2
    - rewrite
  tags: apache


#######################################


- name: Download shibboleth certificate
  become: yes
  get_url:
    url: https://ds.aaf.edu.au/distribution/metadata/aaf-metadata-cert.pem
    dest: /etc/shibboleth
  tags: apache,shibboleth
#
#- name: keygen shibboleth
#  become: yes
#  command: '/etc/shibboleth/keygen.sh -f -o /etc/shibboleth -h {{ hostname }} -e https://{{ hostname }}/shibboleth'
#  tags: shibboleth

- name: update shibbloeth config
  become: yes
  template:  src="{{ item }}" dest="/etc/shibboleth/"
  with_items:
    - shibboleth2.xml
    - attribute-map.xml
  tags: apache,shibboleth

###############################################
- name: update oztrack site
  become: yes
  template:  src="oztrack.conf" dest="/etc/apache2/sites-available/oztrack.conf"
  notify:
    - reload apache
  tags: apache

- name: Enable oztrack
  command: a2ensite oztrack
  notify:
    - reload apache
    - reload tomcat
    - reload shibd
  tags: apache

###############################################
#https://nexus.ala.org.au/service/local/repositories/snapshots/content/org/oztrack/oztrack/4.9-SNAPSHOT/oztrack-4.9-20160913.074922-4.war
- name: Clear ROOT on Tomcat
  become: yes
  command: "{{ item }}"
  with_items:
    - "service tomcat7 stop"
    - "rm /var/lib/tomcat7/webapps/ROOT.war"
    - "rm -r /var/lib/tomcat7/webapps/ROOT"
  ignore_errors: true
  tags: oztrack


- name: Download Oztrack
  become: yes
  become_user: tomcat7
  get_url:
    url: 'https://nexus.ala.org.au/service/local/repositories/snapshots/content/org/oztrack/oztrack/4.9-SNAPSHOT/oztrack-4.9-20160913.074922-4.war'
    dest: /var/lib/tomcat7/webapps/ROOT.war
  tags: oztrack

- name: create home folder for Oztrack
  file:
    path: "{{ item }}"
    state: directory
    owner: tomcat7
    group: tomcat7
    mode: 0775
  with_items:
    - "{{ oztrack_home }}"
  tags: oztrack

- name: cp oztrack config
  become: yes
  template:  src="{{ oztrack_custom_property_file }}" dest="{{ oztrack_home }}{{ oztrack_custom_property_file }}"
  notify:
    - reload apache
  tags: oztrack

- name: Override default tomcat memory configuration
  lineinfile:
    dest={{ tomcat_conf }}
    regexp="^JAVA_OPTS"
    line='JAVA_OPTS="{{ oztrack_tomcat_java_opts }}"'
  notify:
    - reload tomcat
  tags: oztrack







