- include: ../../common/tasks/setfacts.yml
  tags:
    - logger-service
    - properties

- name: create logger DB
  mysql_db: name={{logger_db_name}} state=present encoding=utf8
  register: dbschema
  tags:
    - logger-service
    - db

- name: create logger DB user
  mysql_user: name={{logger_db_username}} password={{logger_db_password}} priv=*.*:ALL state=present
  register: dbuser
  tags:
    - logger-service
    - db

- name: copy transient files to tmp (schemas etc)
  copy: src={{item}} dest=/tmp
  with_items:
    - db/
  when: dbschema.changed
  tags:
    - logger-service
    - db

- name: create schema, stored procs and reference data
  mysql_db: name={{logger_db_name}} state=import target={{item}}
  with_items:
    - /tmp/schema.sql
    - /tmp/eventLogType.sql
    - /tmp/reasonLogType.sql
    - /tmp/sourceLogType.sql
    - /tmp/refresh_summary_breakdown_email.sql
    - /tmp/refresh_summary_breakdown_reason.sql
    - /tmp/refresh_summary_breakdown_source.sql
    - /tmp/refresh_summary_totals.sql
    - /tmp/update_breakdown_summary_information.sql
    - /tmp/definer_user.sql
  when: dbschema.changed
  tags:
    - logger-service
    - db

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/logger/config"
  tags:
    - logger-service
    - properties

- name: copy all config.properties
  template: src=logger-config.properties dest={{data_dir}}/logger/config/logger-config.properties
  tags:
    - logger-service
    - properties

- name: set data ownership
  file: path={{data_dir}}/logger owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify: 
    - restart tomcat
  tags:
    - logger-service
    - properties

- include: ../../apache_vhost/tasks/main.yml context_path='{{ logger_context_path }}' hostname='{{ logger_hostname }}'
  tags:
    - logger-service
    - deploy
    - apache_vhost
  when: not webserver_nginx

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    appname: "logger-service"
    hostname: "{{ logger_hostname }}"
    context_path: "{{ logger_context_path }}"
  tags:
    - nginx_vhost
    - deploy
    - logger-service
  when: webserver_nginx

- include: ../../tomcat_deploy/tasks/main.yml war_url='{{ logger_war_url }}' context_path='{{ logger_context_path }}' hostname='{{ logger_hostname }}'
  tags:
    - logger-service
    - deploy
    - tomcat_vhost
