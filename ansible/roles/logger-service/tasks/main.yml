- include: ../../common/tasks/setfacts.yml
  tags:
    - logger-service
    - properties

- name: create logger DB
  mysql_db: name={{logger_db_name}} state=present encoding=utf8 login_user=root login_password='{{mysql_root_password}}'
  register: dbschema
  tags:
    - logger-service
    - db

- name: create logger DB user
  mysql_user: name='{{logger_db_username}}' password='{{logger_db_password}}' priv=*.*:ALL state=present login_user=root login_password='{{mysql_root_password}}'
  register: dbuser
  tags:
    - logger-service
    - db

- name: copy transient files to tmp (schemas etc)
  copy: src={{item}} dest=/tmp
  with_items:
    - db/
  when: dbschema.changed
  tags:
    - logger-service
    - db

- name: create schema, stored procs and reference data
  mysql_db: name='{{logger_db_name}}' state=import target={{item}} login_user=root login_password='{{mysql_root_password}}'
  with_items:
    - /tmp/schema.sql
    - /tmp/eventLogType.sql
    - /tmp/reasonLogType.sql
    - /tmp/sourceLogType.sql
    - /tmp/refresh_summary_breakdown_email.sql
    - /tmp/refresh_summary_breakdown_reason.sql
    - /tmp/refresh_summary_breakdown_source.sql
    - /tmp/refresh_summary_totals.sql
    - /tmp/update_breakdown_summary_information.sql
# The following is broken on MySQL-8.0, reenable if it becomes an issue in future
#    - /tmp/definer_user.sql
  when: dbschema.changed
  tags:
    - logger-service
    - db

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/logger/config"
  tags:
    - logger-service
    - properties

- name: copy all config.properties
  template: src=logger-config.properties dest={{data_dir}}/logger/config/logger-config.properties output_encoding=iso-8859-1
  tags:
    - logger-service
    - properties

- name: set data ownership
  file: path={{data_dir}}/logger owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify: 
    - restart tomcat
  tags:
    - logger-service
    - properties

- include: ../../apache_vhost/tasks/main.yml context_path='{{ logger_context_path }}' hostname='{{ logger_hostname }}'
  tags:
    - logger-service
    - deploy
    - apache_vhost
  when: not webserver_nginx

- name: copy all SQL auth ip scripts
  template: src={{ item }} dest={{data_dir}}/logger/setup/
  with_items:
    - "sql/auth-ip.sql"
  when: logger_authorize_ip_list is defined
  tags:
    - logger-service
    - db
    - properties

- name: create auth ip in db if does not exists
  shell: "mysql --host={{ logger_db_hostname }} --user={{ logger_db_username }} --password={{ logger_db_password }} {{ logger_db_name }} -e \"set @ip='{{ item }}'; set @host_name='{{ item }}'; source {{data_dir}}/logger/setup/auth-ip.sql;\""
  loop: "{{ (logger_authorize_ip_list | regex_replace(' ', '')).split(',') }}"
  when: logger_authorize_ip_list is defined
  ignore_errors: no
  tags:
    - logger-service
    - db

- name: set nginx proxy target if configured
  set_fact:
    logger_proxy_target: "{{logger_context_path}}"
  tags:
    - nginx_vhost
    - deploy
    - logger-service
  when: webserver_nginx and logger_proxy_target is not defined

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    appname: "logger-service"
    hostname: "{{ logger_hostname }}"
    context_path: "{{ logger_context_path }}"
    nginx_paths:
      - path: "{{logger_context_path}}/service/logger/reasons"
        sort_label: "1_logger_reasons"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}/service/logger/reasons"
      - path: "{{logger_context_path}}/service/logger/sources"
        sort_label: "1_logger_sources"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}/service/logger/sources"
      - path: "{{logger_context_path}}/service/logger/events"
        sort_label: "1_logger_events"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}/service/logger/events"
      - path: "{{logger_context_path}}/service/logger"
        sort_label: "8_service_logger"
        is_proxy: true
        use_cache: false
        force_cache: false
        extra_logs: ["{{ logger_service_extra_postdata_logging }}"]
        extra_limit_zones: "{{ logger_service_extra_limit_zones }}"
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}/service/logger"
      - path: "{{logger_context_path}}/admin"
        sort_label: "8_admin"
        is_proxy: true
        use_cache: false
        force_cache: false
        extra_limit_zones: "{{ logger_service_extra_limit_zones_admin }}"
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}/admin"
      - path: "{{logger_context_path}}"
        sort_label: "9_default"
        is_proxy: true
        use_cache: false
        force_cache: false
        proxy_pass: "http://127.0.0.1:8080{{logger_proxy_target}}"
  tags:
    - nginx_vhost
    - deploy
    - logger-service
  when: webserver_nginx

- include: ../../tomcat_deploy/tasks/main.yml war_url='{{ logger_war_url }}' context_path='{{ logger_context_path }}' hostname='{{ logger_hostname }}'
  tags:
    - logger-service
    - deploy
    - tomcat_vhost
