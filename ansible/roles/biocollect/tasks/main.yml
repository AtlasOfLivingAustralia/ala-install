- include_tasks: ../../common/tasks/setfacts.yml
  tags:
    - deploy
    - biocollect
    - properties

- name: set biocollect_user as default value
  set_fact:
    biocollect_user: "{{ (exec_jar) | ternary ('biocollect', 'tomcat')}}"
  tags:
    - biocollect
    - deploy
    - properties

- name: add jar and service (authenticated)
  include_role:
    name: exec-jar
  vars:
    service_name: "biocollect"
    jar_url: '{{ biocollect_artifact_url }}'
    maven_repo_url: '{{ biocollect_repo_url }}'
    maven_repo_username: '{{ biocollect_repo_username }}'
    maven_repo_password: '{{ biocollect_repo_password }}'
  tags:
    - deploy
    - service
    - biocollect
  when: exec_jar and biocollect_repo_password is defined and biocollect_repo_username is defined

- name: add jar and service (unauthenticated)
  include_role:
    name: exec-jar
  vars:
    service_name: "biocollect"
    jar_url: '{{ biocollect_artifact_url }}'
  tags:
    - deploy
    - service
    - biocollect
  when: exec_jar and biocollect_repo_password is not defined and biocollect_repo_username is not defined

#
# External configuration properties file
#
- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{biocollect_user}} group={{biocollect_user}}
  with_items:
    - "{{data_dir}}/biocollect/config"
  tags:
    - properties
    - biocollect

- name: copy all config.properties
  template: src=biocollect-config.properties dest={{data_dir}}/biocollect/config/biocollect-config.properties
  tags:
    - properties
    - biocollect

- name: copy logback config
  template:
    src: logback.xml
    dest: "{{data_dir}}/biocollect/config/logback.xml"
    owner: "{{biocollect_user}}"
    group: "{{biocollect_user}}"
  notify:
    - restart biocollect
  tags:
    - properties
    - biocollect

- name: ensure biocollect directories exist
  file: path={{item}} state=directory owner={{biocollect_user}} group={{biocollect_user}}
  with_items:
    - "{{data_dir}}/biocollect/logs"
    - "{{data_dir}}/biocollect/ehcache"
  tags:
    - properties
    - biocollect
  when: exec_jar

- name: set biocollect log ownership
  file: path='{{data_dir}}/biocollect/logs' owner='{{biocollect_user}}' group='{{biocollect_user}}' recurse=true
  notify:
    - restart biocollect
  tags:
    - properties
    - biocollect
  when: exec_jar

- name: Copy config files to config directory
  copy: src=regions.json dest={{data_dir}}/biocollect/config/regions.json
  tags:
    - biocollect
    - properties

- name: set data ownership
  file: path={{data_dir}}/biocollect owner={{biocollect_user}} group={{biocollect_user}} recurse=true
  notify:
    - restart biocollect
  tags:
    - properties
    - biocollect

# WAR file deployment and virtual host configuration
#
- name: Setup apache virtual host
  include_role:
    name: apache_vhost
  vars:
      context_path: "{{ biocollect_context_path }}"
      hostname: "{{ biocollect_hostname }}"
  tags:
    - deploy
    - apache_vhost
    - biocollect
  when: not webserver_nginx

- name: ensure target directories exist for nginx proxy file storage
  file: path={{ item }} state=directory owner=www-data group=www-data recurse=true
  with_items:
    - "{{ data_dir }}/biocollect/www"
  tags:
    - nginx_vhost
    - deploy
    - biocollect

- name: add nginx vhost if configured (no root rewrite)
  include_role:
    name: nginx_vhost
  vars:
    appname: "biocollect"
    hostname: "{{ biocollect_hostname }}"
    context_path: "{{ biocollect_context_path }}"
    nginx_paths:
      - path: "{{ biocollect_context_path }}"
        sort_label: "1_root"
        is_proxy: true
        proxy_pass: "http://127.0.0.1:{{ biocollect_server_port }}{{ biocollect_context_path }}"
        add_header: "X-Frame-Options {{ frame_options_header_value }}"
      - path: "{{ biocollect_context_path }}/download/"
        sort_label: "2_download"
        is_proxy: true
        proxy_pass: "http://127.0.0.1:{{ biocollect_server_port }}{{ biocollect_context_path }}/download/"
        add_header: "X-Frame-Options {{ frame_options_header_value }}"
      - path: "{{ biocollect_context_path | default('/') }}pwa-mobile"
        sort_label: "3_pwa_app"
        alias: "{{ biocollect_pwa_app_path | default('/data/biocollect/pwa-mobile') }}"
        index: "index.html"
  tags:
    - nginx_vhost
    - deploy
    - biocollect
  when: webserver_nginx and not biocollect_rewrite_root | bool

- name: add nginx vhost if configured (root rewrite)
  include_role:
    name: nginx_vhost
  vars:
    appname: "biocollect"
    hostname: "{{ biocollect_hostname }}"
    context_path: "{{ biocollect_context_path }}"
    nginx_paths:
      - path: "= /"
        is_proxy: false
        sort_label: "1_rootrewrite"
        rewrite: "{{ biocollect_rewrite_root_url }}"
      - path: "{{ biocollect_context_path | default('/') }}"
        is_proxy: true
        sort_label: "2_tomcatproxy"
        proxy_pass: "http://127.0.0.1:{{ biocollect_server_port }}"
        add_header: "X-Frame-Options {{ frame_options_header_value }}"
      - path: "{{ biocollect_context_path }}/download/"
        sort_label: "3_download"
        is_proxy: true
        proxy_pass: "http://127.0.0.1:{{ biocollect_server_port }}{{ biocollect_context_path }}/download/"
        add_header: "X-Frame-Options {{ frame_options_header_value }}"
      - path: "{{ biocollect_context_path | default('/') }}pwa-mobile"
        sort_label: "4_pwa_app"
        alias: "{{ biocollect_pwa_app_path | default('/data/biocollect/pwa-mobile') }}"
        index: "index.html"
  tags:
    - nginx_vhost
    - deploy
    - biocollect
  when: webserver_nginx and biocollect_rewrite_root | bool

- name: Deploy war to tomcat
  include_role:
    name: tomcat_deploy
  vars:
      war_url: "{{ biocollect_war_url }}"
      context_path: "{{ biocollect_context_path }}"
      hostname: "{{ biocollect_hostname }}"
  tags:
    - deploy
    - biocollect
  when: not exec_jar

- name: Clear existing PWA files (if they exist)
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - /data/biocollect/pwa.zip
    - "/data/biocollect/{{ pwa_artifact_name }}.zip"
  tags:
    - pwa

 # We have to use curl instead of get_url as the latter is broken for some mysterious reason
- name: Download PWA artifact
  ansible.builtin.command:
    cmd: "curl -X GET https://api.github.com/repos/AtlasOfLivingAustralia/biocollect-pwa/actions/artifacts/{{ pwa_artifact_id }}/zip -H 'Authorization: Bearer {{ pwa_gh_token }}' -o /data/biocollect/pwa.zip -v -L"
  tags:
   - pwa

- name: Remove current PWA deployment
  file:
    path: /data/biocollect/pwa-mobile
    state: absent
  tags:
    - pwa

- name: Extract new PWA archives
  ansible.builtin.shell: sudo unzip pwa.zip
  args:
    chdir: /data/biocollect
  tags:
    - pwa

- name: Extract new PWA build
  ansible.builtin.shell: "sudo unzip {{ pwa_artifact_name }}.zip -d /data/biocollect/pwa-mobile"
  args:
    chdir: /data/biocollect
  tags:
    - pwa

- name: Clear temporary PWA archives
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - /data/biocollect/pwa.zip
    - "/data/biocollect/{{ pwa_artifact_name }}.zip"
  tags:
    - pwa