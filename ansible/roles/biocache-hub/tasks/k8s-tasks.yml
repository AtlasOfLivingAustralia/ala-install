- name: Install Required Python Libraries
  pip:
    name: "{{ item }}"
    state: present
    executable: pip3
  with_items:
    - kubernetes
    - pyyaml

- name: Generate Unique Timestamp
  ansible.builtin.set_fact:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

- name: Create Temporary Directory
  file:
    path: "/tmp/configs/ala-hub/{{ timestamp }}"
    state: directory

- name: Copy all template configs to temp directory
  template: src={{item}} dest="/tmp/configs/ala-hub/{{ timestamp }}" output_encoding=iso-8859-1
  with_items:
    - config/{{grouped_facets_json}}
    - config/charts.json
    - config/{{overlays_json}}
    - config/system-message.json
    - config/logback.groovy

- name: copy all config.properties
  template: src=config/config.properties dest=/tmp/configs/ala-hub/{{timestamp}}/ala-hub-config.properties force=yes output_encoding=iso-8859-1

- name: Delete existing ConfigMap
  command: "{{ kubectl_exec_path }} delete configmap ala-hub-config --ignore-not-found=true --context={{ k8s_context }}"
  ignore_errors: yes
  become: false

- name: Apply ConfigMap
  command: "{{ kubectl_exec_path }} create configmap ala-hub-config --from-file=/tmp/configs/ala-hub/{{ timestamp }} --context={{ k8s_context }}"
  become: false

- name: Clean up Temporary Directory and Files
  ansible.builtin.file:
    path: "/tmp/configs/ala-hub/{{ timestamp }}"
    state: absent

- name: Add ALA Helm Chart Repository
  kubernetes.core.helm_repository:
    name: ala
    binary_path: "{{ helm_exec_path }}"
    repo_url: https://helm-charts.ala.org.au
  become: false

- name: Install ALA hub Helm Chart
  kubernetes.core.helm:
    host: "{{ k8s_host }}"
    context: "{{ k8s_context }}"
    force: true
    binary_path: "{{ helm_exec_path }}"
    chart_ref: ala/ala-hub
    release_name: ala-hub
    release_namespace: default
    values: "{{ lookup('template', 'war-helm-values.j2') | from_yaml }}"
    values_files:
      - "{{ common_values_path }}"
    skip_crds: true
  become: false
  tags:
    - ala-hub



