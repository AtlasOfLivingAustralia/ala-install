- include: ../../common/tasks/setfacts.yml
  tags:
    - docker
    - update-images
    - events
    - service
    - docker-config
    - events_vhost

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags:
    - docker
    - events

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
  tags:
    - docker
    - events

- name: Update apt and install docker-ce
  apt: update_cache=yes name={{ item }} state=latest
  with_items:
    - docker-ce
    - docker-ce-cli
    - docker-compose
    - containerd.io
  tags:
    - docker
    - events

- name: Update docker directory
  template: src={{ item }} dest=/etc/docker/{{ item }}
  with_items:
    - daemon.json
  tags:
    - docker
    - events

- name: Restart docker
  service:
    name: docker
    state: restarted
  when: use_docker_with_pipelines is defined and use_docker_with_pipelines | bool == True
  tags:
    - docker
    - events
    - docker-restart

- name: ensures {{ data_dir }}/{{ env }} dir exists
  file:
    path: "{{ data_dir }}/{{ env }}"
    state: directory
  tags:
    - docker
    - events
    - update-images
    - docker-config
    - properties

- name: Copy docker YAML files to {{ data_dir }}
  template: src={{ item }} dest={{ data_dir }}/{{ env }}/{{ item }}
  with_items:
    - graphql-service.yml
    - es2vt.env
    - es-api.env
    - graphql-api.env
  notify:
    - restart graphql_service
  tags:
    - docker
    - events
    - update-images
    - docker-config
    - properties

- name: Copy service scripts to /usr/bin
  template: src={{ item }} dest=/usr/bin/{{ env }}-{{ item }} mode=777
  with_items:
    - graphql-service.sh
  tags:
    - docker
    - events
    - service

- name: Copy docker service files to /etc/systemd/system
  template: src={{ item }} dest=/etc/systemd/system/{{ env }}-{{ item }}
  with_items:
    - graphql.service
  tags:
    - docker
    - events
    - service

- name: enable services
  service: name="{{ env }}-{{ item }}" enabled=yes
  with_items:
    - graphql.service
  tags:
    - docker
    - events
    - service

- name: Start service graphql-service, if not running
  service:
    name: "{{ env }}-graphql"
    state: started
  tags:
    - docker
    - events
    - service

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    appname: "events"
    hostname: "{{ events_hostname }}"
    context_path: ""
    nginx_paths:
      - path: "/es/"
        sort_label: "1_es"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:{{ es_port }}/"
      - path: "/graphql"
        sort_label: "1_graphql"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:{{ graphql_port }}"
      - path: "/tile/"
        sort_label: "1_tile"
        is_proxy: true
        use_cache: true
        force_cache: true
        proxy_pass: "http://127.0.0.1:{{ es2vt_port }}/"
  tags:
    - events
    - events_vhost

