- name: determine if a virtual host is required (vhost not required for localhost, 127.0.0.1 or any hostname with a colon in it)
  set_fact: vhost_required={{ hostname.find(':') == -1 and hostname.find('localhost') == -1 and hostname.find('127.0.0.1') == -1 }}

- name: Is a virtual host required?
  debug: msg="Virtual Host required for hostname {{hostname}}? {{vhost_required}}"

- name: check whether HTTPS is required
  set_fact: ssl={{ ssl | default(false) }}

- name: Is HTTPS required?
  debug: msg="HTTPS required for hostname {{hostname}}? {{ssl}}"

- name: Should HTTP redirect to HTTPS?
  debug: msg="Force HTTPS for hostname {{hostname}}? {{force_https|default(true)}}"

- name: set ssl_cert_filepath variable, if required
  set_fact: ssl_cert_filepath={{ssl_certificate_server_dir}}/{{ ssl_cert_file }}
  when: ssl_cert_file is defined and ssl_certificate_server_dir is defined

- name: set ssl_key_filepath variable, if required
  set_fact: ssl_key_filepath={{ssl_certificate_server_dir}}/{{ ssl_key_file }}
  when: ssl_key_file is defined and ssl_certificate_server_dir is defined

- name: set ssl_chain_filepath variable, if required
  set_fact: ssl_chain_filepath={{ssl_certificate_server_dir}}/{{ ssl_chain_file }}
  when: ssl_chain_file is defined and ssl_certificate_server_dir is defined

- name: ensure apache vhost exists
  apache_vhost: name={{ hostname }} ssl={{ ssl|default(false) }} force_https={{ force_https|default(true) }} ssl_cert_filepath={{ ssl_cert_filepath|default(false) }} ssl_key_filepath={{ ssl_key_filepath|default(false) }} ssl_chain_filepath={{ ssl_chain_filepath|default(false) }}
  ignore_errors: yes
  when: vhost_required
  notify:
    - reload apache

- name: add optional additional proxy pass rules (if required)
  apache_proxypass: name={{ hostname }} src={{ item.src }} dest={{ item.dest }} ssl={{ ssl|default(false) }} force_https={{ force_https|default(true) }}
  when: vhost_required and additional_proxy_pass is defined
  with_items: additional_proxy_pass
  notify:
    - reload apache

- name: ensure proxy pass exists for apache (without default context)
  apache_proxypass: name={{ hostname }} src={{ item.src }} dest={{ item.dest }} ssl={{ ssl|default(false) }} force_https={{ force_https|default(true) }}
  when: vhost_required
  with_items:
    - { src: "/{{ context_path.replace('/', '') }}", dest: "ajp://localhost:8009/{{ context_path.replace('/', '') }}" }
  notify:
    - reload apache

- name: create a proxy pass rule for the root context (if required)
  apache_proxypass: name={{ hostname }} src="/" dest="ajp://localhost:8009/{{ proxy_root_context_to }}/" ssl={{ ssl|default(false) }} force_https={{ force_https|default(true) }}
  when: proxy_root_context_to is defined
  notify:
    - reload apache

- name: ensure www directory exists
  file: path=/srv/{{ hostname }}/www state=directory owner={{tomcat_user}} group={{tomcat_user}}
  notify:
    - reload apache

- name: ensure HTTPS certificate directory exists (if required)
  file: path={{ ssl_certificate_server_dir }} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  when: ssl and ssl_certificate_server_dir is defined

- name: check whether copying HTTPS certificates from local is required
  set_fact: copy_https_certs_from_local={{ copy_https_certs_from_local | default(false) }}

- name: set local directory for HTTPS certificate copy
  set_fact: ssl_certificate_local_dir={{ ssl_certificate_local_dir | default('ssl_certificate_local_dir_not_set') }}

- name: set ssl_cert_file if undefined
  set_fact: ssl_cert_file={{ ssl_cert_file | default('ssl_cert_file_not_set') }}

- name: set ssl_key_file if undefined
  set_fact: ssl_key_file={{ ssl_key_file | default('ssl_key_file_not_set') }}

- name: set ssl_chain_file if undefined
  set_fact: ssl_chain_file={{ ssl_chain_file | default('ssl_chain_file_not_set') }}

- name: copy HTTPS certificate files from local
  copy: src={{item}} dest={{ssl_certificate_server_dir}}
  with_items:
    - "{{ssl_certificate_local_dir}}/{{ssl_cert_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_key_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_chain_file}}"
  when: ssl and copy_https_certs_from_local and ssl_certificate_server_dir is defined
  notify:
    - reload apache

- name: Enable vhost for Apache
  command: a2ensite {{ hostname }}.conf
  when: vhost_required
  args:
    creates: /etc/apache2/sites-enabled/{{hostname}}
  notify: 
    - reload apache

- name: Enable SSL module for Apache (if required)
  apache2_module: state=present name=ssl
  when: ssl is defined and ssl

- name: Add the virtual host to the /etc/hosts file for Vagrant instances
  lineinfile: dest=/etc/hosts regexp="^127.0.0.1 {{hostname}}$" line="127.0.0.1 {{ hostname }}" state=present
  when: is_vagrant
