- include: ../../common/tasks/setfacts.yml
  tags:
    - cassandra 

########## REDHAT ########## 

- name: setup yum repo
  copy: src=yum/datastax.repo dest=/etc/yum.repos.d/datastax.repo
  when: ansible_os_family == "RedHat"   

# Note: Ansible 1.6.x yum does not work with "with_items"
# This is more verbose, but version safe
- name: install datastax (Redhat)
  yum: name="{{datastax}}" state=latest
  tags:
    - packages 
    - cassandra 
  notify: 
    - restart cassandra
  when: ansible_os_family == "RedHat" 

- name: install cassandra (Redhat)
  yum: name="{{cassandra}}" state=present
  tags:
    - packages 
    - cassandra 
  notify: 
    - restart cassandra
  when: ansible_os_family == "RedHat" 

########## DEBIAN ########## 

- name: install curl (Debian)
  apt: name=curl state=latest
  when: ansible_os_family == "Debian" 
  tags:
    - packages 
    - cassandra 

- name: install wget (Debian)
  apt: name=wget state=latest
  when: ansible_os_family == "Debian" 
  tags:
    - packages 
    - cassandra 

- name: install software-properties-common (Debian)
  apt: name=software-properties-common state=latest
  when: ansible_os_family == "Debian" 
  tags:
    - packages 
    - cassandra 

- name: install python software properties (Debian)
  apt: name="{{ python_software_properties }}" state=latest
  when: ansible_os_family == "Debian"
  tags:
    - packages 
    - cassandra 

- name: add repository key (Debian)
  apt_key:
    keyserver: "hkp://keyserver.ubuntu.com:80"
    id: "A278B781FE4B2BDA"
  when: ansible_os_family == "Debian"
  tags:
    - packages
    - cassandra

# Cassandra developers seemingly have no consistency about the key used for signing releases, so we resort to pulling them all in
# Definitely not ideal but no way around it while we are still using cassandra
- name: add repository keys in bulk (Debian)
  shell: 'curl https://downloads.apache.org/cassandra/KEYS | sudo apt-key add -'
  when: ansible_os_family == "Debian"
  tags:
    - packages
    - cassandra

# Need to clear the previous repository if it exists
- name: remove previous apt repository (Debian)
  apt_repository:
    repo: "deb http://www.apache.org/dist/cassandra/debian 311x main"
    state: absent
    filename: "cassandra.sources"
    update_cache: no
  when: ansible_os_family == "Debian"
  tags:
    - packages
    - cassandra

- name: add apt repository (Debian)
  apt_repository:
    repo: "deb https://downloads.apache.org/cassandra/debian 311x main"
    state: present
    filename: "cassandra.sources"
    update_cache: yes
  when: ansible_os_family == "Debian"
  tags:
    - packages
    - cassandra

- name: install Cassandra (Debian)
  apt: name=cassandra state=latest update_cache=yes force=yes
  tags:
    - packages 
    - cassandra 
  notify: 
    - restart cassandra
  when: ansible_os_family == "Debian" 

- name: install Cassandra tools (Debian)
  apt: name=cassandra-tools state=latest update_cache=yes force=yes
  tags:
    - packages 
    - cassandra 
  notify: 
    - restart cassandra
  when: ansible_os_family == "Debian" 

- name: create data directory for cassandra on mounted storage
  file: path="{{ data_dir }}/cassandra3" state=directory owner="{{cassandra_user}}" group="{{cassandra_user}}"
  tags:   
    - cassandra

- name: create the cassandra yaml from template
  template: src="{{item.src}}" dest="{{item.dest}}" owner="{{cassandra_user}}" group="{{cassandra_user}}" force=yes
  with_items:
    - { src: cassandra-env.sh, dest: /etc/cassandra/cassandra-env.sh }
    - { src: cassandra.yaml, dest: /etc/cassandra/cassandra.yaml}
  notify: 
    - restart cassandra
  tags:   
    - cassandra 
    - cassandra_yaml    

- name: clean up directories that have been created by initial installation of cassandra 3
  shell: 'rm -Rf /data/cassandra3/data && rm -Rf /data/cassandra3/commitlog && rm -Rf /var/log/cassandra/* && rm -Rf /var/lib/cassandra/hints'
  when: ansible_os_family == "Debian"
  notify: 
    - restart cassandra  
  tags:
    - packages
    - cassandra





