######################################################################
# 
# Biocache configuration file
#
# This file has been generated via an ansible script.
#
######################################################################

# The email address of the technical contact
technical.contact={{ technical_contact | default('support@ala.org.au') }}

# Whether to enable performance analysis using JMX
jmx.debug.enabled={{ jmx_debug_enabled | default('true') }}

# The base URL for biocache web services
webservices.root={{ biocache_service_url }}

# Cassandra Config
db={{ biocache_db_type | default('cassandra') }}
# cassandra hosts - this should be comma separated list in the case of a cluster
cassandra.hosts={{ biocache_db_host }}
cassandra.port={{ biocache_db_port | default('9160') }}
local.node.ip={{ local_node_ip | default('127.0.0.1')}}
cassandra.pool=biocache-store-pool
cassandra.keyspace={{ cassandra_keyspace | default('occ') }}
cassandra.max.connections=-1
cassandra.max.retries=6
thrift.operation.timeout=80000
cluster.size={{ cluster_size | default('1') }}
node.number={{ node_number | default('0') }}
cassandra.async.updates.enabled = false
cassandra.async.updates.threads = {{ cassandra_async_updates_threads | default('1') }}
cassandra.async.paging.enabled = false
cassandra.token.split = {{ cassandra_token_split | default('10') }}

# The number of concurrent Cassandra update threads
cassandra.update.threads={{ cassandra_update_threads | default('1') }}

# Record page size used by processing, indexing and other operations using a full table scan
cassandra.fetch.size={{ cassandra_fetch_size | default('500') }}

# Database read timeout in milliseconds
cassandra.timeout={{ cassandra_timeout | default('120000') }}

# Zookeeper address - used to retrieve SOLR configuration if not available locally
zookeeper.address = {{ zookeeper_address | default('') }}

#######################################################
# File system usage
#######################################################

# Directory used to track the status of uploads
upload.status={{ data_dir }}/biocache-upload/status

# Directory used by sandbox functionality to write data files to be ingested
upload.temp={{ data_dir }}/biocache-upload/temp

# Base URL to media files
media.url={{ biocache_service_base_url }}/biocache-media/

# Directory root for images
media.dir={{ data_dir }}/biocache-media/

# The type of media store (none, local, remote or auto)
media.store.type={{ media_store_type | default('auto') }}

# URL instance of image-service to store media
media.store.url={{ media_store_url | default('') }}
media.store.connection.pool.size={{ media_store_connection_pool_size | default('25') }}
media.store.connection.pool.maxperroute={{ media_store_connection_pool_maxperroute | default('25') }}
media.store.maxrequests.persec={{ media_store_maxrequests_persec | default('10') }}
#API key for imageservice
imageservice.api.key={{ image_service_apiKey | default('Define images API key in inventory file') }} 

# Directory to log deleted row keys to
deleted.file.store={{ data_dir }}/biocache-delete/

# List tool endpoint
list.tool.url={{ lists_service_url | default('') }}

# Whether to enable list tool integration (this is used at indexing time only)
include.species.lists={{ include_species_lists | default('false') }}

# Whether or not to enable SDS checks
sds.enabled={{ sds_enabled | default('false') }}

# SDS data file
sds.url={{ biocache_sds_url | default('https://sds.ala.org.au') }}

# The directory to write files to while ingesting data
load.dir={{ data_dir }}/biocache-load/

# Charts services
charts.facets.string.max={{ charts_facets_string_max |  default('1000') }}
charts.facets.number.max={{ charts_facets_number_max |  default('1000') }}

#######################################################
# External services
#######################################################

# The URL of SOLR services. In the case of embedded SOLR (no for production), this could be a directory path instead
# solrHome=http://localhost:8080/solr
# OR a list of Zookeeper nodes if the Solr configuration is stored in Zookeeper (advertised on port 2181)
# solrHome=zookeeper-1.example:2181,zookeeper-2.example:2181,zookeeper-3.ala:2181
solr.home={{ solr_url }}

# Whether to use HTTP2 connector
solr.usehttp2={{ solr.usehttp2 |  default(true) }}

# Solr HTTP Client Connection Pool configuration to avoid opening too many concurrent connections to the Solr server
solr.connection.pool.size={{ solr_connection_pool_size | default('50') }}
solr.connection.pool.maxperroute={{ solr_connection_pool_maxperroute | default('50') }}

# Solr HTTP Connection timeout defaults, in milliseconds (could have been overriden in internal Solr Client code in various places)
solr.connection.connecttimeout={{ solr_connection_connecttimeout | default('30000') }}
solr.connection.requesttimeout={{ solr_connection_requesttimeout | default('30000') }}
solr.connection.sockettimeout={{ solr_connection_sockettimeout | default('30000') }}

# Solr HTTP Cache settings (requires you to setup HTTP Cache headers in your solr configuration before they will take effect)
solr.connection.cache.entries={{ solr_connection_cache_entries | default('500') }}
# Maximum object size to store in the cache, in bytes (Default 256 kilobytes: 1024 * 256 = 262144 bytes)
solr.connection.cache.object.size={{ solr_connection_cache_object_size | default('262144') }}

# The number of concurrent Solr update threads
solr.update.threads={{ solr_update_threads | default('4') }}

# The HTTP User Agent used for some queries from biocache-store
biocache.useragent={{ biocache_useragent | default('Biocache') }}

# The SOLR collection to query
solr.collection={{ solr_collection | default('biocache')}}

# Base URL for registry (collectory) web services
registry.url={{ collectory_url }}/ws

# URL to use for retrieve a citations CSV for downloads
citations.url={{ collectory_url }}/ws/citations

# API key to use to authenticate WS requests
registry.api.key={{ registry_api_key | default('') }}

# If enabled, processing & loading operations will cause an metadata update in the registry
allow.registry.updates={{ allow_registry_updates | default('true') }}

# Base URL for taxon services (BIE)
service.bie.ws.url={{ (bie_service_url | default(bie_service_base_url)) | default('https://bie-ws.ala.org.au/ws') }}

# Base URL for taxon pages (BIE)
service.bie.ui.url={{ (bie_url | default(bie_base_url)) | default('https://bie.ala.org.au') }}

# Allow service to be disabled via config (enabled by default)
service.bie.enabled={{ bie_service_enabled | default('false') }}

# Base URL for Biocache UI
biocache.ui.url={{ biocache_hub_url }}

# Base URL for DOI service DOI
doi.ui.url={{ doi_service_url | default('https://doi.ala.org.au') }}
doi.service.url={{ doi_service_api_url | default('https://doi.ala.org.au/api/') }}
doi.service.apiKey={{ doi_service_apiKey | default('Define API key in inventory file') }}
doi.service.readTimeout={{ doi_service_read_time_out | default('900000') }}

doi.provider={{ doi_provider | default('ALA') }}

# A fixed period after minting a DOI to allow it to propagate
download.doi.propagation.delay={{ download_doi_propagation_delay | default('60000') }}

#######################################################
# Miscellaneous configuration options
#######################################################

# The URL of layer services
layers.service.url={{ layers_service_url | default('https://spatial.ala.org.au/ws') }}

# The URL of the spatial-service /fields service
spatial.layers.url={{ spatial_layers_url | default('https://spatial.ala.org.au/ws/fields') }}

# To use layers service for sampling
layers.service.sampling={{ layers_service_sampling | default('false') }}

# Used by location processor for associating a country with an occurrence record where only stateProvince supplied and not coordinates are available
default.country={{ default_country | default('') }}

# Specify fields to sample - set to 'none' for no sampling
sample.fields={{ sample_fields | default('none') }}

# The list of default fields to use if a list can not be obtained from the spatial layers.
default.sample.fields={{ default_sample_fields | default('') }}
#defaultFieldsToSample=cl20,cl23,cl901,cl914,cl916,cl935,el594,el848,el815,el834,el707,el794,el786,el789,el774,el851,el647,el717,el708,el748,el821,el777,el832,el814,el823,el816,el712,el841,el845,el839,el844,el836,el817,el811,el855,el804,el899,el737,el756,el759,el752,el739,el776,el753,el716,el729,el751,el827,el673,el810,el820,el830,el779,el813,el598,el835,el808,el807,el715,el833,el837,el719,el809,el829,el838,el725,el765,el745,el822,el798,cl606,cl611,cl612,cl613,cl614,cl617,cl605,cl620,el727,el843,el760,el758,el842,el818,el714,el812,el840,el730,el722,el866,el773,el876,el871,el872,el886,el887,el894,el877,el874,el862,el875,el883,el892,el879,el889,el881,el880,el890,el882,el864,el885,el868,el891,el724,el873,el884,el865,el895,el878,el863,el867,el870,el858,el850,el860,el768,el854,el857,el859,el849,el757,el755,el682,el681,el733,el856,el720,el732,el761,el721,el762,el772,el668,el746,el731,el671,el728,el743,el749,el744,el734,el750,el600,el726,el718,el736,el713,el602,el593,el771,el601,el764,el778,el595,el888,el596,el599,el723,el788,el791,el782,el806,el742,el797,el893,el735,el754,el766,el740,el775,el763,el853,el796,el869,el861,el675,el793,el787,el781,el795,el785,el852,el670,el799,el790,el783,el704,el666,el672,el591,el802,el800,el803,el801,el805,el661,el738,el705,el792,el784,el667,cl917,cl925,cl926,el676,el597,el680,el674,el747,el711,el828,el770,el819,el898,el706,el767,cl928,cl929,cl930,cl900,el769,el741,cl902,cl903,cl904,cl905,cl906,cl907,cl908,cl909,cl910,cl932,cl923,cl911,cl912,cl678,el831,el669,el825,el826,el662,el709,cl618,cl896,cl604,cl619,cl922,el824,cl927,cl913,cl942,cl21,cl22

# geospatial layers used to add darwin core properties from lat/lng. uses IDs of layers from layer service
layer.state.province={{ layer_state_province | default('') }}
layer.terrestrial={{ layer_terrestrial | default('') }}
layer.marine={{ layer_marine | default('') }}
layer.countries={{ layer_countries | default('') }}
layer.localgov={{ layer_localgov | default('') }}

# Name search services
namesearch.url = {{ namesearch_url | default('https://namematching-ws.ala.org.au') }}

# The languages to use for common names. Applicable for people using GBIF name matching indexes
commonname.lang= {{ commonname_lang | default('') }}

# Exclude sensitive values for the listed data resources (comma separated list)
exclude.sensitive.values=

# Additional fields to index (used by biocache-store only)
extra.misc.fields={{ extra_misc_fields | default('') }}
#extraMiscFields=OriginalSeedQuantity_i,AdjustedSeedQuantity_i,CurrentSeedQuantity_i,ViabilitySummary_d

# Max number of threads to use when processing an endemic request 
endemic.query.maxthreads= {{ endemic_query_maxthreads | default('30') }}

# Max number of threads to use when processing a solr search query which is not an endemic query, or an online download or an offline download
solr.downloadquery.maxthreads={{ solr_downloadquery_maxthreads | default('30') }}

# Max number of threads to use when processing an online download (occurrences/index/download)
online.downloadquery.maxthreads={{ online_downloadquery_maxthreads | default('30') }}

# Max number of threads to use when processing an offline download (occurrences/offline/download)
download.offline.parallelquery.maxthreads={{ download_offline_parallelquery_maxthreads | default('30') }}

# An artificial throttle used between calls to Solr for paged results, including online and offline downloads
download.throttle.ms={{ download_throttle_ms | default('50') }}

# The batch size for individual queries to Solr during downloads
download.batch.size={{ download_batch_size | default('500') }}

# The size of an internal fixed length blocking queue used to parallelise reading from Solr before writing to this queue
download.internal.queue.size={{ download_internal_queue_size | default('100') }}

# Maximum total time for downloads to be execute. Defaults to 1 week (604,800,000ms)
download.max.execute.time={{ download_max_execute_time | default('604800000') }}

# Maximum total time to wait for downloads to be written to disk after Solr queries are complete. Defaults to 5 minutes (300,000ms)
# Increase this if you are seeing messages about downloads being interrupted
# This needs to be fairly large as shapefiles are completely written to temp files after all of the Solr queries complete
download.max.completion.time={{ download_max_completion_time | default('300000') }}

# The fixed page size used by the biocache-service scatterplot service when querying solr
scatterplot.query.page.size={{ scatterplot_query_page_size | default('100000') }}

# The fixed page size used by the biocache-service WMS tiles server when querying solr if uncertainty circles are required
wms.pagesize={{ wms_page_size | default('100000') }}

# Base directory for heatmap images
heatmap.output.dir={{ data_dir }}/output/heatmap

# AuthService properties to inject
auth.user.details.url={{ userdetails_url }}
auth.user.names.id.path=getUserList
auth.usernames.for.numeric.id.path=getUserListWithIds
auth.substitution.fields=assertionUserId,userId

# Enable and customise this to check API keys
apikey.check.enabled={{ apikey_check_enabled | default('false') }}
apikey.check.url={{ api_check_url | default("No API Key Check URL Set") }}

# Caches to enable/disable. Comment out the caches that you wish to enable
caches.auth.enabled={{ caches_auth_enabled | default('false') }}
caches.log.enabled={{ caches_log_enabled | default('false') }}

# Note: The collections cache is problematic when collectory/biocache-service on deployed on the same tomcat
caches.collections.enabled={{ caches_collections_enabled | default('true') }}
caches.layers.enabled={{ caches_layers_enabled | default('false') }}

taxon.profile.cache.all={{ taxon_profile_cache_all | default('false') }}

# Cache sizes can be lowered to reduce memory footprint at the possible cost of throughput
taxon.profile.cache.size={{ taxon_profile_cache_size | default('10000') }}
classification.cache.size={{ classification_cache_size | default('10000') }}
commonname.cache.size={{ commonname_cache_size | default('10000') }}
spatial.cache.size={{ spatial_cache_size | default('10000') }}
attribution.cache.size={{ spatial_cache_size | default('10000') }}
sensitivity.cache.size={{ sensitivity_cache_size | default('10000') }}
location.cache.size={{ sensitivity_cache_size | default('10000') }}

# Citations disable - for now we can disable them in the future will need a way to customise the source.
citations.enabled={{ citations_enabled | default('true') }}

# URL for retrieve list of contacts for collection
collection.contacts.url={{ collectory_url }}/ws/collection

# URL for LoggerService
logger.service.url={{ logger_url }}{{ logger_path | default("/service/logger/") }}
occurrence.log.enabled={{ occurrence_log_enabled | default("true") }}

# Temporary working directory (used by processing)
tmp.work.dir={{ data_dir }}/tmp

# Restart Data Service
# Warning: Uses unsynchronised reflection to access private fields and save/restore them from disk
# Enable at your own risk
restart.data.enabled={{ restart_data_enabled | default('false') }}
restart.data.frequency={{ restart_data_frequency | default('60000') }}

#######################################################
# Volunteer portal (DigiVol) integration
#######################################################

# Hub ID for the DigiVol
volunteer.hub.uid={{ volunteer_hub_uid | default('') }}
# Data Provider ID for DigiVol
volunteer.dp.uid={{ volunteer_dp_uid | default('') }}

#######################################################
# SFTP integration
#######################################################

# User details to SFTP/SCP from upload
uploadUser={{ upload_user | default('') }}
uploadPassword={{ upload_password | default('') }}


#######################################################
# Facets
#######################################################

# Limit to &facets term count for all queries
facets.max={{ facets_max | default('10') }}

# Limit the default &facets term count. This limits the default facets assigned from facets.json
facets.defaultmax={{ facets_defaultmax | default('0') }}

# Default &facet value (true|false). Clients must always set &facet=true when facets are required and this default is false.
facet.default={{ facet_default | default('true') }}

# Autocomplete related caches, it will still work when these are disabled but the cached information will be unavailable.
autocomplete.species.images.enabled={{ autocomplete_species_images_enabled | default('true') }}
autocomplete.species.counts.enabled={{ autocomplete_species_counts_enabled | default('true') }}
autocomplete.commonnames.extra.enabled={{ autocomplete_commonnames_extra_enabled | default('true') }}

# species.counts.async.updates is only used when autocomplete.species.counts.enabled=true
# When true the autocomplete will return without waiting for species counts to be populated or updated.
species.counts.async.updates={{ species_counts_async_updates | default('true') }}

# species.counts.cache.minage is only used when autocomplete.species.counts.enabled=true
# Each species counts cache is updated at the first use, after a change to the index, and when the last update is older
# than this time in ms. The default is no more than 1 update every 30 minutes for each species counts cache.
species.counts.cache.minage={{ species_counts_cache_minage | default('1800000') }}

# Set SOLR batch size. Default=1000
solr.batch.size={{ solr_batch_size | default('500') }}

# Set SOLR hard commit size. Default=10000 - used in indexing.
solr.hardcommit.size={{ solr_hardcommit_size | default('5000') }}

# Temporary directory where shapefiles are created for downloads
shapefile.tmp.dir={{ data_dir }}/biocache-download/tmp

# URL or path to subgroups JSON configuration
species.subgroups.url={{ species_subgroups_url | default('/data/biocache/config/subgroups.json') }}

#######################################################
# Downloads
#######################################################

# offline downloads email
download.email.subject={{ download_email_subject | default('[hubName] Occurrence Download Complete - [filename]') }}
download.date.format={{ download_date_format | default('dd MMMMM yyyy') }}
download.auth.sensitive={{ download_auth_sensitive | default('false') }}
download.solr.only={{ download_solr_only | default('true') }}

download.email.template={{ download_email_template | default('/data/biocache/config/download-email.html')}}
download.readme.enabled={{ download_readme_enabled | default('true') }}
download.readme.template={{ download_readme_template | default('/data/biocache/config/download-readme.html')}}

download.doi.licence.prefix={{ download_doi_licence_prefix | default('Datasets are covered by the following licence(s): ') }}
download.doi.title.prefix={{ download_doi_title_prefix | default('Occurrence download ') }}
download.doi.landing.page.baseUrl={{ biocache_hub_url }}/download/doi?doi=
download.doi.resolver={{ download_doi_resolver | default('https://doi.ala.org.au/doi/') }}

download.support.email.enabled={{ download_support_email_enabled | default('false') }}
download.support.email={{ download_support_email | default('support@ala.org.au') }}
download.support={{ download_support_email | default('support@ala.org.au') }} 
my.download.doi.baseUrl={{ my_download_doi_baseUrl | default('https://doi.ala.org.au/myDownloads') }}

download.doi.failure.message={{ download_doi_failure_message | default('A DOI was requested for this download however it could not be minted.')}}

download.doi.email.template={{ download_doi_email_template | default('/data/biocache/config/download-doi-email.html')}}
download.doi.readme.template={{ download_doi_readme_template | default('/data/biocache/config/download-doi-readme.html')}}

download.csdm.email.template={{ download_csdm_email_template | default('/data/biocache/config/download-csdm-email.html')}}

email.sender={{ email_sender | default('support@ala.org.au') }}
mail.smtp.host={{ mail_smtp_host | default('localhost') }}
mail.smtp.port={{ mail_smtp_port | default('25') }}

#DOI Default metadata
doi.author={{ doi_author | default('Atlas Of Living Australia') }}
doi.description={{ doi_description | default('ALA occurrence record download') }}
doi.resourceText={{ doi_resourceText | default('Species information') }}

# Base URL for generated download files
download.url={{ download_url | default('https://biocache.ala.org.au/biocache-download') }}
download.dir={{ download_dir | default('/data/biocache-download/biocache-download') }}

# Download queue configuration
concurrent.downloads.json={{ concurrent_download_json | default('[{\"label\": \"smallSolr\", \"threads\": 4, \"maxRecords\": 50000, \"type\": \"index\", \"pollDelay\": 10, \"executionDelay\": 10, \"threadPriority\": 5}, {\"label\": \"largeSolr\", \"threads\": 1, \"maxRecords\": 100000000, \"type\": \"index\", \"pollDelay\": 100, \"executionDelay\": 100, \"threadPriority\": 1}, {\"label\": \"smallCassandra\", \"threads\": 1, \"maxRecords\": 50000, \"type\": \"db\", \"pollDelay\": 10, \"executionDelay\": 10, \"threadPriority\": 5}, {\"label\": \"defaultUnrestricted\", \"threads\": 1, \"pollDelay\": 1000, \"executionDelay\": 100, \"threadPriority\": 1}]') }}

# Maximum points in WKT string supported before simplification applies
# Set this to 0 to disable simplification (disabling not recommended due to performance issues)
qid.wkt.maxPoints={{ qid_wkt_maxPoints | default('50000') }}

# The step size factor during the iteration simplification algorithm
qid.wkt.simplification.factor={{ qid_wkt_simplification_factor | default('2.0') }}

# The initial precision to attempt during simplification
qid.wkt.simplification.initialprecision={{ qid_wkt_simplification_initial_precision | default('0.0001') }}

# The maximum precision to attempt during simplification before giving up
qid.wkt.simplification.maxprecision={{ qid_wkt_simplification_max_precision | default('10.0') }}

# Maximum size of the WMS cache
wms.cache.size.max={{ wms_cache_size_max | default('1048576') }}

# Default set of fields in the download - for the legacy format
default.download.fields={{ default_download_fields | default('id,dataResourceUid,dataResourceName,institutionUid,institutionName,collectionUid,collectionName,license,catalogNumber,taxonConceptID,raw_scientificName,raw_vernacularName,scientificName,taxonRank,vernacularName,kingdom,phylum,class,order,family,genus,species,subspecies,institutionCode,collectionCode,locality,raw_decimalLatitude,raw_decimalLongitude,raw_geodeticDatum,decimalLatitude,decimalLongitude,coordinatePrecision,coordinateUncertaintyInMeters,country,stateProvince,cl959,minimumElevationInMeters,maximumElevationInMeters,minimumDepthInMeters,maximumDepthInMeters,individualCount,recordedBy,year,month,day,verbatimEventDate,basisOfRecord,raw_basisOfRecord,occurrenceStatus,sex,preparations,informationWithheld,dataGeneralizations,L,taxonomic_kosher,spatiallyValid') }}

# Maximum offline file size
download.offline.max.size={{ download_offline_max_size | default('100000000') }}

# Shapefile downloads enabled
download.shp.enabled={{ download_shp_enabled | default('true') }}

# Grid indexing enabled (used by biocache store only)
gridref.indexing.enabled={{ gridref_indexing_enabled | default('false') }}

# National checklist GUID pattern
national.checklist.guid.pattern={{ national_checklist_guid_pattern | default('.*') }}

# Used in OGC XML services
organizationName={{ organizationName | default('Atlas of Living Australia') }}
orgCity={{ orgCity | default('Canberra') }}
orgStateProvince={{ orgStateProvince | default('ACT') }}
orgPostcode={{ orgPostcode | default('2601') }}
orgCountry={{ orgCountry | default('Australia') }}
orgPhone={{ orgPhone | default('+61 (0) 2 6246 4400') }}
orgFax={{ orgFax | default('+61 (0) 2 6246 4400') }}
orgEmail={{ orgEmail | default('support@ala.org.au') }}

geoserver.url={{ geoserver_url | default('https://spatial.ala.org.au/geoserver') }}

# Used when creating new layer fields (el or cl) in the live SOLR instance
solr.index.docvalues.layer={{ solrIndexDocvaluesLayer | default('false') }}
solr.index.indexed.layer={{ solrIndexIndexedLayer | default('true') }}
solr.index.stored.layer={{ solrIndexStoredLayer | default('true') }}

# Used when creating new misc fields in the live SOLR instance
solr.index.docvalues.misc={{ solrIndexDocvaluesMisc | default('false') }}
solr.index.misc={{ solrIndexIndexedMisc | default('true') }}
solr.index.stored.misc={{ solrIndexStoredMisc | default('true') }}

# Where to get the IRMNG data from
irmng.archive.url={{ irmng_archive | default('https://archives.ala.org.au/archives/nameindexes/irmng/IRMNG_DWC.zip') }}

dataquality.baseUrl={{ data_quality_url | default('https://dataquality.ala.org.au/') }}
dataquality.enabled={{ data_quality_enabled | default('false') }}
dataquality.apiKey={{data_quality_api_key | default('')}}

sensitiveAccessRoles20={{ sensitive_access_roles | default('{}') }}
