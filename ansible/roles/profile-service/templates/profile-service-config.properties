deployment_env={{ deployment_env }}

#CAS Config
{% if is_cognito | bool == False %}
security.cas.casServerName={{ auth_base_url }}
security.cas.casServerUrlPrefix={{ auth_cas_url }} 
security.cas.loginUrl={{ auth_cas_url }}/login
security.cas.logoutUrl={{ auth_cas_url }}/logout
security.cas.appServerName={{ profile_service_base_url }}
security.apikey.check.serviceUrl={{ apikey_check_url }}
security.apikey.ip.whitelist={{ apikey_ip_whitelist }}
security.oidc.discoveryUri={{ discoveryUri }}
security.oidc.clientId={{ profile_service_clientId | default('') }}
security.oidc.secret={{ profile_service_secret | default('') }}
security.jwt.discoveryUri={{ discoveryUri }}
userdetails.service.url={{ userdetails_base_url }}
userDetails.url={{ userdetails_base_url }}
{% endif %}

# do not read timeout
security.oidc.readTimeout=0

serverURL={{ profile_service_base_url }}
grails.serverURL={{ profile_service_url }}
serverName={{ profile_service_base_url }}
{% if profile_service_server_port is defined %}
server.port={{ profile_service_server_port }}
{% endif %}

grails.mongodb.username={{ profiles_username }}
grails.mongodb.password={{ profiles_password }}
grails.mongodb.databaseName={{ profiles_database }}

{% if is_cognito | bool == True %}
userdetails.api.url={{ userdetails_aws_api_url }}
userdetails.web.url={{ userdetails_aws_web_url }}
security.oidc.scope={{ security_aws_oidc_scope }}
security.oidc.logoutUrl={{ oidc_logout_url }}
security.oidc.alaUseridClaim=username
security.oidc.logoutAction=cognito
security.oidc.clientId={{ profile_service_aws_clientId | default('') }}
security.oidc.secret={{ profile_service_aws_secret | default('') }}
security.core.roleAttribute=ala:role
security.jwt.rolesFromAccessToken=true
security.jwt.userIdClaim=username
security.jwt.roleClaims=cognito:groups
webservice.client-id={{ profile_service_aws_ws_clientId | default('') }}
webservice.client-secret={{ profile_service_aws_ws_secret | default('') }}
security.oidc.discoveryUri={{ discoveryUri4AWS }}
security.jwt.discoveryUri={{ discoveryUri4AWS }}
webservice.jwt=true
webservice.jwt-scopes=ala/internal users/read profile-service/write
{% elif is_cognito | bool == False %}
userdetails.api.url={{ userdetails_api_url }}
userdetails.web.url={{ userdetails_web_url }}
security.oidc.scope={{ security_oidc_scope }}
webservice.client-id={{ profile_service_ws_clientId | default('') }}
webservice.client-secret={{ profile_service_ws_clientSecret | default('') }}
webservice.jwt=true
webservice.jwt-scopes=ala profile users/read
{% endif %}

bie.base.url={{ bie_base_url }}
collectory.base.url={{ collectory_base_url }}
images.base.url={{ images_base_url }}
sandbox.base.url={{ sandbox_base_url }}
avh.base.url={{ avh_base_url }}
profile.hub.base.url={{ profile_hub_base_url }}

name.index.location=/data/lucene/namematching

nsl.name.instance.url.prefix={{ nsl_base_url }}/services/rest/instance/apni/
nsl.name.url.prefix={{ nsl_base_url }}/mapper/boa/name/apni/
nsl.service.url.prefix={{ nsl_base_url }}/services/rest/name/apni/
nsl.search.service.url.prefix={{ nsl_base_url }}/services/api/name/taxon-search.json
nsl.service.apni.concept.suffix=/api/apni-concepts.json
nsl.name.match.url.prefix={{ nsl_base_url }}/services/api/name/acceptable-name.json?name=
nsl.find.concept.service.suffix=/api/find-concept.json?term=
nsl.name.export.url={{ nsl_base_url }}/services/api/export/namesCsv

attachments.directory=/data/profile-service/attachments
snapshot.directory=/data/profile-service/snapshots
temp.file.directory=/data/profile-service/temp

doi.service.url={{ doi_service_url }}
doi.resolution.url.prefix={{ profile_hub_url }}/publication/

elasticSearch.cluster.name={{ elasticsearch_cluster_name }}

webservice.apiKey={{ api_key }}

grails.cors.enabled=true
grails.cors.allowedOrigins[0]=https://bie.ala.org.au
grails.cors.allowedOrigins[1]=https://bie-test.ala.org.au

# fathom analytics
fathom.api.url={{ fathom_api_url | default('https://api.usefathom.com/v1/aggregations') }}
fathom.api.key={{ fathom_api_key }}
fathom.site-id={{ fathom_site_id }} 
fathom.hostname={{ profile_hub_base_url }}

security.core.affiliation-survey.enabled={{affiliation_survey_enabled | default ('false')}}
security.core.authCookieName={{ auth_cookie_name | default('ALA-Auth') }}
security.cookie.enabled={{auth_cookie_enabled | default ('false')}}
security.cookie.domain={{auth_cookie_domain | default ('.ala.org.au')}}
