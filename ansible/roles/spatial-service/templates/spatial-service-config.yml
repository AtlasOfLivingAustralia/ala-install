#
# au.org.ala.spatial.service config
#
data:
  dir: '{{ data_dir }}/spatial-data'
geoserver:
  url: '{{ geoserver_url }}'
  username: '{{ geoserver_username | default('admin') }}'
  password: '{{ geoserver_password | default('geoserver') }}'
  canDeploy: {{ can_deploy_to_geoserver | default('true') }}
# To use a remote geoserver instance, set geoserver.remote.geoserver_data_dir to the geoserver_data_dir path on the
# remote server. This will cause layer files to be copied to geoserver_data_dir/data/
#  remote:
  geoserver_data_dir: "{{ geoserver_data_dir | default('/data/spatial-data/geoserver_data_dir') }}"

shpResolutions: {{ shp_resolutions | default([0.5, 0.25, 0.1, 0.05]) }}
grdResolutions: {{ grd_resolutions | default([0.5, 0.25, 0.1, 0.05, 0.01]) }}

biocacheServiceUrl: "{{ biocache_service_url | default('https://biocache.ala.org.au/ws') }}"
biocacheUrl: "{{ biocache_url | default('https://biocache.ala.org.au') }}"
openstreetmap:
  url: "{{ openstreetmap_tile_url | default('https://tile.openstreetmap.org') }}"

slave.enable: {{ slave_enable | default(true) }}
service.enable: {{ service_enable | default(true) }}

serviceKey: {{ spatial_service_service_key  | default('') }}
batch_sampling_passwords: "{{ batch_sampling_passwords | default('') }}"
batch_sampling_points_limit: {{ batch_sampling_points_limit | default(1000000) }}
batch_sampling_fields_limit: {{ batch_sampling_fields_limit | default(1000) }}

---
#
# au.org.ala.spatial.slave config
#
spatialService.url: "{{ spatial_service_url }}"
shp2pgsql.path: "{{ shp2pgsql_path | default('/usr/bin/shp2pgsql') }}"
gdal.dir: "{{ gdal_dir | default('/usr/bin/') }}"
gdm.dir: "{{ gdm_dir | default('/data/spatial-data/modelling/gdm/DoGdm') }}"

aloc.xmx: "{{ aloc_xmx | default('6G') }}"
aloc.threads: "{{ aloc_threads | default(4) }}"
maxent.mx: "{{ maxent_mx | default('1G') }}"
maxent.threads: "{{ maxent_threads | default(4) }}"

sampling.threads: "{{ sampling_threads | default(4) }}"

slaveKey: "{{ spatial_service_slave_key | default('') }}"
serviceKey: "{{ spatial_service_service_key | default('') }}"

# time between pushing status updates to the master for a task
statusTime: "{{ status_time | default(3000) }}"
retryCount: "{{ retry_count | default(10) }}"
retryTime: "{{ retry_time | default(30000) }}"

#
#  CAS SETTINGS
#
#  NOTE: Some of these will be ignored if default_config exists
security:
  cas:
    casServerName: {{ auth_base_url }}
    uriFilterPattern: {{ uri_filter_pattern | default('/manageLayers,/manageLayers/.*,/admin,/admin/.*,/alaAdmin.*') }}
    uriExclusionFilterPattern: {{ uri_exclusion_filter_pattern | default('/assets.*,/images.*,/css.*,/js.*,/less.*,/tasks/status/.*') }}
    authenticateOnlyIfLoggedInFilterPattern: {{ authenticate_only_if_logged_in_filter_pattern | default('/master,/master/.*,/tasks,/tasks/.*') }}
    appServerName: {{ spatial_service_base_url }}
    casServerUrlPrefix: {{ auth_cas_url }}
    loginUrl: {{ auth_cas_url }}/login
    logoutUrl: {{ auth_cas_url }}/logout
    contextPath: {{ spatial_service_context_path }}
    bypass: {{ bypass_cas | default(true) }}
    disableCAS: {{ bypass_cas | default(true) }}
    gateway: {{ gateway_cas | default(false) }}

auth.admin_role: {{ auth_admin_role | default('ROLE_ADMIN') }}
app.http.header.userId: {{ app_http_header_userid | default('X-ALA-userId') }}

headerAndFooter.baseURL: {{ header_and_footer_baseurl | default('https://www.ala.org.au/commonui-bs3') }}
ala.baseURL: {{ ala_base_url | default('https://www.ala.org.au') }}
bie.baseURL: {{ bie_base_url | default('https://bie.ala.org.au') }}
bie.searchPath: '/search'

records.url: {{ records_url | default('https://archives.ala.org.au/archives/exports/lat_lon_taxon.zip') }}

api_key: {{ spatial_service_api_key  | default('') }}
lists.url: {{ lists_url | default('https://lists.ala.org.au') }}
collections.url: {{ collections_url | default('https://collections.ala.org.au') }}
sandboxHubUrl: {{ sandbox_url | default('http://sandbox.ala.org.au/ala-hub') }}
sandboxBiocacheServiceUrl: {{sandbox_biocache_service_url | default('http://sandbox.ala.org.au/biocache-service') }}
phyloServiceUrl: {{ phylolink_url | default('https://phylolink.ala.org.au') }}

spatialHubUrl: {{ spatial_hub_url }}

gazField: {{ gaz_field | default('cl915') }}
userObjectsField: {{ user_objects_field | default('cl1083') }}

apiKeyCheckUrlTemplate: "{{api_key_check_url_template | default('https://auth.ala.org.au/apikey/ws/check?apikey={0}') }}"
spatialService.remote: "{{spatial_service_remote_url}}"

journalmap.api_key: {{ journalmap_api_key | default('') }}
journalmap.url: {{ journalmap_url | default('https://www.journalmap.org/') }}

# For side by side installation with layers-service, analysis-service
#legacy.workingdir: '/{{ data_dir }}/ala/data/alaspatial/'

#legacy.enabled: true

#legacy compatability type
#"link" = link legacy files into new locations
#"copy" = copy legacy files into new locations
#"move" = move legacy files into new locations
#legacy.type="link"

#legacy.ANALYSIS_LAYER_FILES_PATH: '{{ data_dir }}/ala/data/layers/analysis/'
#legacy.LAYER_FILES_PATH: '{{ data_dir }}/ala/data/layers/ready'
#legacy.ALASPATIAL_OUTPUT_PATH: '{{ data_dir }}/ala/runtime/output'

grails.plugin.elfinder.rootDir: '{{ data_dir }}/spatial-service'

i18n.override.dir: '{{ data_dir }}/spatial-service/config/i81n/'


#layers-store config

#Threads created for each batch intersection and each individual shape file
#layers_store.BATCH_THREAD_COUNT: 3

#Set LAYER_INDEX_URL to use REMOVE layer intersections.
#layers_store.LAYER_INDEX_URL: https://spatial.ala.org.au/layers-service

#Use local layer files for sampling or the /intersect/batch service provided by LAYER_INDEX_URL
#layers_store.LOCAL_SAMPLING: false
#layers_store.LOCAL_SAMPLING: true

# Set intersect config reload time in ms
#layers_store.CONFIG_RELOAD_WAIT: 12000000

#Comma separated shape file fields to preload, or 'all'
#layers_store.PRELOADED_SHAPE_FILES: all
#layers_store.PRELOADED_SHAPE_FILES: cl22,cl20

# Grid intersection buffer size in bytes.  Must be multiple of 64.
# Only applies to grids > 80MB.
# layers_store.GRID_BUFFER_SIZE=4096
#layers_store.GRID_BUFFER_SIZE: 40960

# Number of GridCacheReader objects to open.
#layers_store.GRID_CACHE_READER_COUNT: 5

# layers_store ingestion
#layers_store.CAN_INGEST_LAYERS: false
#layers_store.CAN_UPDATE_LAYER_DISTANCES: false
#layers_store.CAN_UPDATE_GRID_CACHE: false
#layers_store.CAN_GENERATE_ANALYSIS_FILES: false
#layers_store.CAN_INTERSECT_LAYERS: false
#layers_store.CAN_GENRATE_THUMBNAILS: false

#layers_store.FIELD_STYLES: true

layers_store.GEONETWORK_URL: '{{ geonetwork_url | default('') }}'

distributions.cache.dir: "{{ data_dir }}/${appName}/mapCache/"
distributions.geoserver.image.url: "/ALA/wms?service=WMS&version=1.1.0&request=GetMap&sld={{ distribution_image_sld_url | default('https://fish.ala.org.au/data/dist.sld')}}&layers=ALA:aus1,ALA:Distributions&styles=&bbox=109,-47,157,-7&srs=EPSG:4326&format=image/png&width=400&height=400&viewparams=s:"

dataSource:
    url: 'jdbc:postgresql://{{layers_db_host}}/{{layers_db_name}}'
    username: {{layers_db_username}}
    password: {{layers_db_password}}

grails.serverURL: {{spatial_service_url}}
grails.app.context: {{spatial_service_context_path}}

skin.orgNameLong: {{ orgNameLong | default('Atlas of Living Australia') }}
skin.orgNameShort: {{ orgNameShort | default('ALA') }}

grails.controllers.upload.maxFileSize: {{ max_request_size | default(524288000) }}
grails.controllers.upload.maxRequestSize: {{ max_request_size | default(524288000) }}

# Needed for map exports
google:
  apikey: "{{ google_api_key | default('') }}"