- include: ../../common/tasks/setfacts.yml
  tags:
    - geoserver
    - geoserver_run_script

- name: packages
  apt: pkg={{ item }} update_cache=yes state=latest
  with_items:
    - curl
    - unzip
  tags:
    - geoserver

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/ala/data/geoserver_data_dir"
    - "{{data_dir}}/ala/data/geoserver_data_dir/gwc"
  tags:
    - geoserver

- name: configure geoserver data dir
  lineinfile:
    dest={{tomcat_conf}}
    line='CATALINA_OPTS="${CATALINA_OPTS} -DGEOSERVER_DATA_DIR={{data_dir}}/geoserver_data_dir -DGEOWEBCACHE_CACHE_DIR={{data_dir}}/geoserver_data_dir/gwc"'
  notify:
    - restart tomcat
  when: ansible_os_family == "Debian"
  tags:
    - tomcat
    - geoserver

- include: ../../apache_vhost/tasks/main.yml context_path='{{ geoserver_context_path }}' hostname='{{ geoserver_hostname }}'
  tags:
    - deploy
    - apache_vhost
    - geoserver
  when: not webserver_nginx

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    hostname: "{{ geoserver_hostname }}"
    context_path: "{{ geoserver_context_path }}"
  tags:
    - nginx_vhost
    - deploy
    - geoserver
  when: webserver_nginx

- include: ../../tomcat_deploy/tasks/main.yml war_url='{{ geoserver_war_url }}' context_path='{{ geoserver_context_path }}' hostname='{{ geoserver_hostname }}'
  tags:
    - deploy
    - tomcat_vhost
    - geoserver

- name: unzip .war to get data directory
  command: "unzip {{ tomcat_deploy_dir }}/{{ war_filename }}.war data/* -d /tmp/"
  tags:
    - geoserver

- name: remove previous geoserver data dir
  command: "rm -r /tmp/geoserver_data_dir"
  ignore_errors: yes
  tags:
    - geoserver

- name: rename data dir
  command: "mv /tmp/data /tmp/geoserver_data_dir"
  tags:
    - geoserver

- name: copy data directory
  command: "cp -r /tmp/geoserver_data_dir {{data_dir}}"
  tags:
    - geoserver

- name: set data ownership
  file: path={{data_dir}}/geoserver_data_dir owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify:
    - restart tomcat
  tags:
    - geoserver

- name: restart tomcat to bring config effective
  service:
    name: "{{tomcat}}"
    state: restarted
  tags:
    - geoserver
  become: true

- name: restart nginx
  service:
      name: "{{nginx}}"
      state: restarted
  tags:
    - geoserver
  when: webserver_nginx
  become: true

- name: restart apache2
  service:
      name: "{{apache}}"
      state: restarted
  tags:
    - geoserver
  when: not webserver_nginx
  become: true

- name: "wait for geoserver to come up"
  uri:
    url: "{{ geoserver_url }}"
    status_code: 200
  register: result
  until: result.status is defined and result.status == 200
  retries: 200
  delay: 10
  tags:
    - geoserver

- name: change root password
  uri:
    url: "{{ geoserver_url }}/rest/security/masterpw"
    method: "PUT"
    user: 'admin'
    password: 'geoserver'
    force_basic_auth: yes
    body: '{ "oldMasterPassword": "geoserver", "newMasterPassword": "{{ geoserver_password }}" }'
    status_code: 200
    body_format: json
  when: geoserver_password != "geoserver"
  tags:
     - password
     - geoserver

- name: change admin password
  uri:
    url: "{{ geoserver_url }}/rest/security/self/password"
    method: "PUT"
    user: 'admin'
    password: 'geoserver'
    force_basic_auth: yes
    body: '{ "newPassword": "{{ geoserver_password }}" }'
    status_code: 200
    body_format: json
  when: geoserver_password != "geoserver"
  tags:
     - password
     - geoserver


- name: copy geoserver script
  template: src=geoserver.sh dest={{data_dir}}/geoserver.sh
  when: not skip_geoserver_script
  tags:
    - geoserver

- name: copy geoserver script
  template: src=geoserver.objects.xml dest={{data_dir}}/geoserver.objects.xml
  when: not skip_geoserver_script
  tags:
    - geoserver

- name: copy geoserver script
  template: src=geoserver.distributions.xml dest={{data_dir}}/geoserver.distributions.xml
  when: not skip_geoserver_script
  tags:
    - geoserver

- name: copy points style.xml
  template: src=geoserver.points.xml dest={{data_dir}}/geoserver.points.xml
  when: not skip_geoserver_script
  tags:
    - geoserver

- name: geoserver script permissions
  command: "chmod a+x {{data_dir}}/geoserver.sh"
  when: not skip_geoserver_script
  tags:
    - geoserver

- name: Running geoserver.sh
  command: "{{data_dir}}/geoserver.sh"
  args:
    chdir: "{{data_dir}}"
  when: not skip_geoserver_script
  tags:
    - geoserver
    - geoserver_run_script
  become: true





