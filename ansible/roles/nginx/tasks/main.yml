---
# Variable setup.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - nginx

- name: Define nginx_user.
  set_fact:
    nginx_user: "{{ __nginx_user }}"
  when: nginx_user is not defined
  tags:
    - nginx

# Setup/install tasks.
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'
  tags:
    - nginx

- include: setup-Ubuntu.yml
  when: ansible_distribution == 'Ubuntu'
  tags:
    - nginx

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'
  tags:
    - nginx

- include: setup-FreeBSD.yml
  when: ansible_os_family == 'FreeBSD'
  tags:
    - nginx

- include: setup-OpenBSD.yml
  when: ansible_os_family == 'OpenBSD'
  tags:
    - nginx

- include: setup-Archlinux.yml
  when: ansible_os_family == 'Archlinux'
  tags:
    - nginx

- name: enable nginx modules if configured
  set_fact:
    nginx_extra_conf_options: "include {{ nginx_modules_path }}/*.conf;"
  when:
    - ansible_os_family == 'Debian'
    - nginx_use_modules is defined and nginx_use_modules | bool == True
  tags:
    - nginx

# Vhost configuration.
- include: vhosts.yml
  tags:
    - nginx

# Nginx setup.
- name: Copy nginx configuration in place.
  template:
    src: "{{ nginx_conf_template }}"
    dest: "{{ nginx_conf_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
    validate: "nginx -t -c %s"
    backup: yes
  notify:
    - restart nginx
  tags:
    - nginx

- name: Copy nginx mime.types file.
  template:
    src: "{{ nginx_mime_template }}"
    dest: "{{ nginx_mime_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - restart nginx
  tags:
    - nginx

- name: Ensure nginx is started and enabled to start at boot.
  service: name=nginx state=started enabled=yes
  tags:
    - nginx
