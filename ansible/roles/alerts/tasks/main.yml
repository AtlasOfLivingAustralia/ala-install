- include_tasks: ../../common/tasks/setfacts.yml
  tags:
    - alerts
    - properties

- name: create alerts DB
  mysql_db: name={{ alerts_db_name }} state=present encoding={{ alerts_db_encoding | default('utf8') }} login_user=root login_password='{{mysql_root_password}}'
  tags:
    - db
    - alerts

- name: create alerts DB user
  mysql_user: name={{ alerts_db_username }} password={{ alerts_db_password}} priv=*.*:ALL state=present login_user=root login_password='{{mysql_root_password}}'
  tags:
    - db
    - alerts

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{ tomcat_user }} group={{ tomcat_user }}
  with_items:
    - "{{data_dir}}/alerts/config"
  tags:
    - properties
    - alerts

- name: copy all config.properties
  template: src=alerts-config.properties dest={{data_dir}}/alerts/config/alerts-config.properties output_encoding=iso-8859-1
  tags:
    - properties
    - properties-file
    - alerts

- name: copy logback config
  template:
    src: logback.xml
    dest: "{{data_dir}}/alerts/config/logback.xml"
  tags:
    - properties
    - alerts
    
- name: set data ownership
  file: path={{data_dir}}/alerts owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify:
    - restart tomcat
  tags:
    - properties
    - alerts

- include_tasks: ../../apache_vhost/tasks/main.yml
  vars:
    context_path: '{{ alerts_context_path }}'
    hostname: '{{ alerts_hostname }}'
  tags:
    - alerts
    - apache_vhost
    - deploy
  when: not webserver_nginx

- name: add nginx vhost if configured
  include_role:
    name: nginx_vhost
  vars:
    appname: "alerts"
    hostname: "{{ alerts_hostname }}"
    context_path: "{{ alerts_context_path }}"
  tags:
    - nginx_vhost
    - deploy
    - alerts
  when: webserver_nginx

- include_tasks: ../../tomcat_deploy/tasks/main.yml
  vars:
    war_url: '{{ alerts_war_url }}'
    context_path: '{{ alerts_context_path }}'
    hostname: '{{ alerts_hostname }}'
  tags:
    - alerts
    - tomcat_vhost
    - deploy
