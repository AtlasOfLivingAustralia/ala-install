# CAS Config
security.cas.casServerName={{ auth_base_url }}
security.cas.casServerUrlPrefix={{ auth_cas_url }}
security.cas.loginUrl={{ auth_cas_url }}/login
security.cas.logoutUrl={{ auth_cas_url }}/logout
security.cas.appServerName={{ecodata_url}}
gateway=false


appUrl= {{ecodata_url}}/admin
logoutUrl={{ecodata_url}}/admin/logout
userDetails.url ={{ user_details_url }}

security.oidc.clientId={{oidc_client_id}}
security.oidc.secret={{oidc_client_secret}}
security.oidc.discoveryUri={{ oidc_discovery_uri }}
security.jwt.discoveryUri={{ oidc_discovery_uri }}


{% if auth_system is defined and auth_system == 'cognito' %}
# cognito specific config

security.oidc.logoutUrl={{ logout_url | default('') }}
security.oidc.alaUseridClaim={{ alaUseridClaim | default('') }}
security.oidc.logoutAction={{ logoutAction | default('') }}
security.core.roleAttribute={{ roleAttribute | default('') }}
security.oidc.scope={{ scope | default('openid')}}
security.jwt.rolesFromAccessToken={{ rolesFromAccessToken | default('true') }}
security.jwt.userIdClaim={{ userIdClaim | default('') }}
security.jwt.roleClaims={{ roleClaims | default('') }}
security.jwt.requiredScopes=openid,profile,ala/roles

# This isn't cognito specific, but we don't have this client configured in CAS
webservice.jwt=true
webservice.jwt-scopes=ala/internal users/read ala/attrs
webservice.client-id={{ ecodata_application_client_id }}
webservice.client-secret={{ ecodata_application_client_secret }}

{% endif %}


grails.serverURL={{ecodata_url}}
server.port={{ ecodata_tomcat_server_port | default ('8080', True) }}
server.servlet.session.cookie.secure=true


app.api.whiteList=127.0.0.1,{{ merit_ip }},{{ biocollect_ip }}
imagesService.baseURL={{ imagesService_baseURL }}
biocacheService.baseURL={{ biocacheService_baseUrl }}
app.external.model.dir={{ models_path }}
security.apikey.serviceUrl={{ security_serviceUrl}}
app.uploads.url= {{app_uploads_url}}

access.expiry.cron.expression={{access_expiry_cron_expression}}

# api key
api_key={{ ecodata_api_key }}

# Collectory config
collectory.baseURL={{ collectory_url }}
collectory.dataProviderUid.merit={{ merit_data_provider_uuid }}
collectory.dataProviderUid.biocollect={{ biocollect_data_provider_uuid }}
collectory.collectoryIntegrationEnabled=true

# Email config
grails.mail.host={{ mail_host | default('localhost') }}
grails.mail.port={{ mail_port | default('25') }}
emailFilter={{ email_filter | default('') }}
ecodata.support.email.address = {{ ecodata_support_email }}
ecodata.system.email.replyTo = {{ ecodata_noreply_email }}
ecodata.system.email.sender = {{ ecodata_support_email }}

# URL to use to download asynchronously produced files
async.download.url.prefix={{ biocollect_base_url }}/download/

# Biocollect Project Url for species alert
biocollect.project.url = {{ biocollect_base_url }}/project/index/
biocollect.activity.url = {{ biocollect_base_url }}/bioActivity/index/
biocollect.activity.sightingsUrl={{ biocollect_base_url }}/sightings

# Period for cleaning up temporary files, in days
temp.file.cleanup.days=1

temp.dir=/data/ecodata/temp

scistarter.apiKey={{ scistarter_api_key }}
scistarter.baseUrl=https://scistarter.com
scistarter.forceHttpsUrls=true
scistarter.projectUrl=/api/project
scistarter.finderUrl=/finder

# Spatial portal config
spatial.baseUrl={{ spatial_base_url }}
spatial.intersectUrl={{ spatial_base_url }}/ws/intersect/
spatial.intersectBatchUrl={{ spatial_base_url }}/ws/intersect/batch/

# Sensitive species data config
sensitive.species.data={{ sensitive_species_data | default('/data/ecodata/config/sensitive-species-data.xml') }}

# Database username password
grails.mongodb.url={{ mongo_connection_url }}

# GeoServer configs
geoServer.enabled = {{ geoserver_enabled }}
geoServer.baseURL={{ geoserver_url }}
geoServer.username={{ geoserver_username }}
geoServer.password={{ geoserver_password }}
geoServer.elasticHome={{ geoserver_elastic_home }}
geoServer.elasticPort={{ geoserver_elastic_port }}
geoServer.clusterName={{ geoserver_cluster_name }}

# elasticsearch config
elasticsearch.local={{ elasticsearch_local }}
elasticsearch.host = {{ elasticsearch_primary_host }}
elasticsearch.port = {{ elasticsearch_primary_port }}
elasticsearch.primary = {{ elasticsearch_primary_server }}
elasticsearch.username = {{ es_api_basic_auth_username }}
elasticsearch.password = {{ es_api_basic_auth_password }}


authCheckKeyUrl={{authCheckKeyUrl | default('https://m.ala.org.au/mobileauth/mobileKey/checkKey') }}
authGetKeyUrl={{ authGetKeyUrl | default('https://m.ala.org.au/mobileauth/mobileKey/generateKey') }}

# Sensitive species data config
sensitive.species.data={{ sensitive_species_data | default('/data/ecodata/config/sensitive-species-data.xml') }}
google.maps.geocode.url=https://maps.googleapis.com/maps/api/geocode/json
google.api.key={{ google_maps_api_key }}