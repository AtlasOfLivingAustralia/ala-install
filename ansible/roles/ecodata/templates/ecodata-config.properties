
#
# CAS Config
#
casProperties=casServerLoginUrl,serverName,centralServer,casServerName,uriFilterPattern,uriExclusionFilter,authenticateOnlyIfLoggedInFilterPattern,casServerLoginUrlPrefix,gateway,casServerUrlPrefix,contextPath
serverName={{ecodata_url}}
contextPath={{ ecodata_context_path }}
grails.serverURL={{ecodata_url}}
uriFilterPattern=/admin/.*
casServerName={{ auth_base_url }}
uriExclusionFilterPattern=/images.*,/css.*,/js.*,/less.*
casServerLoginUrl={{ auth_cas_url }}/login
gateway=false
casServerUrlPrefix={{ auth_cas_url }}
security.cas.logoutUrl={{ auth_cas_url }}/logout
authenticateOnlyIfLoggedInFilterPattern=
collectory.baseURL={{ collectory_url }}
app.api.whiteList={{ app_api_whiteList | default('') }}
imagesService.baseURL={{ imagesService_baseURL }}
biocacheService.baseURL={{ biocacheService_baseUrl }}
userDetails.url={{ user_details_url | default("https://auth.ala.org.au/userdetails/userDetails/") }}
app.external.model.dir={{ models_path }}
security.apikey.serviceUrl={{ security_serviceUrl}}
app.uploads.url= {{app_uploads_url}}

# Email config
grails.mail.host={{ mail_host | default('act-ironport-int.csiro.au') }}
grails.mail.port={{ mail_port | default('25') }}
emailFilter={{ mail_filter | default('/[A-Z0-9._%-]+@csiro\.au|chris\.godwin\.ala@gmail.com|christophergodwin@yahoo.com.au/') }}
ecodata.support.email.address = {{ ecodata_support_email }}
ecodata.system.email.replyTo = ALA-{{ deployment_env == 'prod' | ternary('', deployment_env) }}<no-reply>@ala.org.au>
ecodata.system.email.sender = ALA({{ deployment_env == 'prod' | ternary('', deployment_env) }})@ala.org.au

# URL to use to download asynchronously produced files
async.download.url.prefix={{ biocollect_base_url }}/

# Biocollect Project Url for species alert
biocollect.project.url = {{ biocollect_base_url }}/project/index/
biocollect.activity.url = {{ biocollect_base_url }}/bioActivity/index/

# Period for cleaning up temporary files, in days
temp.file.cleanup.days=1

temp.dir=/data/ecodata/temp

scistarter.apiKey={{ scistarter_api_key }}
scistarter.baseUrl=https://scistarter.com
scistarter.forceHttpsUrls=true
scistarter.projectUrl=/api/project
scistarter.finderUrl=/finder

# Spatial portal config
spatial.baseUrl={{ spatial_base_url }}
spatial.intersectUrl={{ spatial_base_url }}/ws/intersect
spatial.intersectBatchUrl={{ spatial_base_url }}/ws/intersect/batch

# Sensitive species data config
sensitive.species.data={{ sensitive_species_data | default('/data/ecodata/config/sensitive-species-data.xml') }}
google.maps.geocode.url={{ google_maps_geocode_url | default('https://maps.googleapis.com/maps/api/geocode/json') }}
google.api.key={{ google_maps_api_key | default('AIzaSyD7R5p12Bb9XQzy-tltZaM778-ny7Xo8eM') }}
